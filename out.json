{
  "magicNumber": 1635018093,
  "metadata": {
    "V14": {
      "lookup": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 1,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Array": {
                  "len": 32,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 2,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Primitive": "U8"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Index",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Index",
                      "docs": [

                      ]
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": [

                      ]
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": [

                      ]
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": [

                      ]
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 4,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Primitive": "U32"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "misc_frozen",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee_frozen",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 6,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Primitive": "U128"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "frame_support",
                "weights",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 8
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 8,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "operational",
                      "type": 8,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mandatory",
                      "type": 8,
                      "typeName": "T",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 8,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Primitive": "U64"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 9,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; /*«*/ 32 /*»*/]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 10,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 11,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 12,
                      "typeName": "Vec<DigestItem>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 12,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 13
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 13,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ConsensusEngineId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ConsensusEngineId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ConsensusEngineId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 14,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Array": {
                  "len": 4,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 15,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 16
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 16,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 17
                },
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 109,
                      "typeName": "Phase",
                      "docs": [

                      ]
                    },
                    {
                      "name": "event",
                      "type": 17,
                      "typeName": "E",
                      "docs": [

                      ]
                    },
                    {
                      "name": "topics",
                      "type": 110,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 17,
            "type": {
              "path": [
                "pangolin_parachain_runtime",
                "Event"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "frame_system::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "name": null,
                          "type": 27,
                          "typeName": "cumulus_pallet_parachain_system::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "name": null,
                          "type": 28,
                          "typeName": "pallet_balances::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "name": null,
                          "type": 30,
                          "typeName": "pallet_transaction_payment::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CollatorSelection",
                      "fields": [
                        {
                          "name": null,
                          "type": 31,
                          "typeName": "pallet_collator_selection::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "name": null,
                          "type": 33,
                          "typeName": "pallet_session::Event",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 34,
                          "typeName": "cumulus_pallet_xcmp_queue::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 38,
                          "typeName": "pallet_xcm::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 78,
                          "typeName": "cumulus_pallet_xcm::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 79,
                          "typeName": "cumulus_pallet_dmp_queue::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "name": null,
                          "type": 80,
                          "typeName": "pallet_utility::Event",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "name": null,
                          "type": 83,
                          "typeName": "pallet_multisig::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "name": null,
                          "type": 85,
                          "typeName": "pallet_proxy::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "pallet_sudo::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RemoteGovernance",
                      "fields": [
                        {
                          "name": null,
                          "type": 90,
                          "typeName": "dp_common_runtime::remote_governance::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgePangolinMessages",
                      "fields": [
                        {
                          "name": null,
                          "type": 91,
                          "typeName": "pallet_bridge_messages::Event<Runtime, pallet_bridge_messages::Instance1\n>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgePangolinDispatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 97,
                          "typeName": "pallet_bridge_dispatch::Event<Runtime, pallet_bridge_dispatch::Instance1\n>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PangolinFeeMarket",
                      "fields": [
                        {
                          "name": null,
                          "type": 99,
                          "typeName": "pallet_fee_market::Event<Runtime, pallet_fee_market::Instance1>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FromPangolinIssuing",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "dp_common_runtime::helixbridge::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessageRouter",
                      "fields": [
                        {
                          "name": null,
                          "type": 108,
                          "typeName": "dp_common_runtime::message_router::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 18,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 19,
                          "typeName": "DispatchInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 22,
                          "typeName": "DispatchError",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dispatch_info",
                          "type": 19,
                          "typeName": "DispatchInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "hash",
                          "type": 9,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 19,
            "type": {
              "path": [
                "frame_support",
                "weights",
                "DispatchInfo"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "class",
                      "type": 20,
                      "typeName": "DispatchClass",
                      "docs": [

                      ]
                    },
                    {
                      "name": "pays_fee",
                      "type": 21,
                      "typeName": "Pays",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "frame_support",
                "weights",
                "DispatchClass"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Operational",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mandatory",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "frame_support",
                "weights",
                "Pays"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "No",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CannotLookup",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "name": null,
                          "type": 23,
                          "typeName": "ModuleError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ConsumerRemaining",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoProviders",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooManyConsumers",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "name": null,
                          "type": 24,
                          "typeName": "TokenError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "name": null,
                          "type": 25,
                          "typeName": "ArithmeticError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "name": null,
                          "type": 26,
                          "typeName": "TransactionalError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    },
                    {
                      "name": "error",
                      "type": 14,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "NoFunds",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "WouldDie",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BelowMinimum",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CannotCreate",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnknownAsset",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unsupported",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "sp_runtime",
                "ArithmeticError"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Overflow",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DivisionByZero",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoLayer",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "ValidationFunctionStored",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The validation function has been scheduled to apply."
                      ]
                    },
                    {
                      "name": "ValidationFunctionApplied",
                      "fields": [
                        {
                          "name": "relay_chain_block_num",
                          "type": 4,
                          "typeName": "RelayChainBlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The validation function was applied as of the contained relay chain block number."
                      ]
                    },
                    {
                      "name": "ValidationFunctionDiscarded",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The relay-chain aborted the upgrade process."
                      ]
                    },
                    {
                      "name": "UpgradeAuthorized",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 9,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "An upgrade has been authorized."
                      ]
                    },
                    {
                      "name": "DownwardMessagesReceived",
                      "fields": [
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some downward messages have been received and will be processed."
                      ]
                    },
                    {
                      "name": "DownwardMessagesProcessed",
                      "fields": [
                        {
                          "name": "weight_used",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dmq_head",
                          "type": 9,
                          "typeName": "relay_chain::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Downward messages were processed using the given weight."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 28,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "free_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                        "resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserved",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "destination_status",
                          "type": 29,
                          "typeName": "Status",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some balance was moved from the reserve of the first account to the second account.",
                        "Final argument indicates the destination balance type."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some amount was deposited (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some amount was removed from the account (e.g. for misbehavior)."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "BalanceStatus"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 30,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "pallet_collator_selection",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "NewInvulnerables",
                      "fields": [
                        {
                          "name": "invulnerables",
                          "type": 32,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NewDesiredCandidates",
                      "fields": [
                        {
                          "name": "desired_candidates",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NewCandidacyBond",
                      "fields": [
                        {
                          "name": "bond_amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CandidateAdded",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CandidateRemoved",
                      "fields": [
                        {
                          "name": "account_id",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 32,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 0
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Event"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "NewSession",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New session has happened. Note that the argument is the session index, not the",
                        "block number as the type might suggest."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Success",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 35,
                          "typeName": "Option<T::Hash>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Some XCM was executed ok."
                      ]
                    },
                    {
                      "name": "Fail",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 35,
                          "typeName": "Option<T::Hash>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "error",
                          "type": 36,
                          "typeName": "XcmError",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Some XCM failed."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 35,
                          "typeName": "Option<T::Hash>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Bad XCM version used."
                      ]
                    },
                    {
                      "name": "BadFormat",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 35,
                          "typeName": "Option<T::Hash>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Bad XCM format used."
                      ]
                    },
                    {
                      "name": "UpwardMessageSent",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 35,
                          "typeName": "Option<T::Hash>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An upward message was sent to the relay chain."
                      ]
                    },
                    {
                      "name": "XcmpMessageSent",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 35,
                          "typeName": "Option<T::Hash>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An HRMP message was sent to a sibling parachain."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 37,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sent_at",
                          "type": 4,
                          "typeName": "RelayBlockNumber",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 8,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "required",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An XCM exceeded the individual message weight budget."
                      ]
                    },
                    {
                      "name": "OverweightServiced",
                      "fields": [
                        {
                          "name": "index",
                          "type": 8,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "used",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "An XCM from the overweight queue was executed with the given actual weight used."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 35,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 36,
            "type": {
              "path": [
                "xcm",
                "v2",
                "traits",
                "Error"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unimplemented",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MultiLocationFull",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MultiLocationNotInvertible",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidLocation",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetNotFound",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotWithdrawable",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LocationCannotHold",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DestinationUnsupported",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transport",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unroutable",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnknownClaim",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FailedToDecode",
                      "fields": [

                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "fields": [

                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotHoldingFees",
                      "fields": [

                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooExpensive",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "fields": [

                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Barrier",
                      "fields": [

                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "WeightNotComputable",
                      "fields": [

                      ],
                      "index": 25,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 37,
            "type": {
              "path": [
                "polkadot_parachain",
                "primitives",
                "Id"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 38,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": null,
                          "type": 39,
                          "typeName": "xcm::latest::Outcome",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Execution of an XCM message was attempted.",
                        "",
                        "\\[ outcome \\]"
                      ]
                    },
                    {
                      "name": "Sent",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A XCM message was sent.",
                        "",
                        "\\[ origin, destination, message \\]"
                      ]
                    },
                    {
                      "name": "UnexpectedResponse",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Query response received which does not match a registered query. This may be because a",
                        "matching query was never registered, it may be because it is a duplicate response, or",
                        "because the query timed out.",
                        "",
                        "\\[ origin location, id \\]"
                      ]
                    },
                    {
                      "name": "ResponseReady",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 62,
                          "typeName": "Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Query response has been received and is ready for taking with `take_response`. There is",
                        "no registered notification call.",
                        "",
                        "\\[ id, response \\]"
                      ]
                    },
                    {
                      "name": "Notified",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification has",
                        "been dispatched and executed successfully.",
                        "",
                        "\\[ id, pallet index, call index \\]"
                      ]
                    },
                    {
                      "name": "NotifyOverweight",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification could",
                        "not be dispatched because the dispatch weight is greater than the maximum weight",
                        "originally budgeted by this runtime for the query result.",
                        "",
                        "\\[ id, pallet index, call index, actual weight, max budgeted weight \\]"
                      ]
                    },
                    {
                      "name": "NotifyDispatchError",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Query response has been received and query is removed. There was a general error with",
                        "dispatching the notification call.",
                        "",
                        "\\[ id, pallet index, call index \\]"
                      ]
                    },
                    {
                      "name": "NotifyDecodeFailed",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Query response has been received and query is removed. The dispatch was unable to be",
                        "decoded into a `Call`; this might be due to dispatch function having a signature which",
                        "is not `(origin, QueryId, Response)`.",
                        "",
                        "\\[ id, pallet index, call index \\]"
                      ]
                    },
                    {
                      "name": "InvalidResponder",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 71,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Expected query response has been received but the origin location of the response does",
                        "not match that expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon.",
                        "",
                        "\\[ origin location, id, expected location \\]"
                      ]
                    },
                    {
                      "name": "InvalidResponderVersion",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Expected query response has been received but the expected origin location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed.",
                        "",
                        "\\[ origin location, id \\]"
                      ]
                    },
                    {
                      "name": "ResponseTaken",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Received query response has been read and removed.",
                        "",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "AssetsTrapped",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "H256",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 72,
                          "typeName": "VersionedMultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some assets have been placed in an asset trap.",
                        "",
                        "\\[ hash, origin, assets \\]"
                      ]
                    },
                    {
                      "name": "VersionChangeNotified",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An XCM version change notification message has been attempted to be sent.",
                        "",
                        "\\[ destination, result \\]"
                      ]
                    },
                    {
                      "name": "SupportedVersionChanged",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "The supported version of a location has been changed. This might be through an",
                        "automatic notification or a manual intervention.",
                        "",
                        "\\[ location, XCM version \\]"
                      ]
                    },
                    {
                      "name": "NotifyTargetSendFail",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 36,
                          "typeName": "XcmError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "sending the notification to it.",
                        "",
                        "\\[ location, query ID, error \\]"
                      ]
                    },
                    {
                      "name": "NotifyTargetMigrationFail",
                      "fields": [
                        {
                          "name": null,
                          "type": 77,
                          "typeName": "VersionedMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "migrating the location to our new XCM format.",
                        "",
                        "\\[ location, query ID \\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 39,
            "type": {
              "path": [
                "xcm",
                "v2",
                "traits",
                "Outcome"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Complete",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Incomplete",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 36,
                          "typeName": "Error",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "name": null,
                          "type": 36,
                          "typeName": "Error",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 40,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multilocation",
                "MultiLocation"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    },
                    {
                      "name": "interior",
                      "type": 41,
                      "typeName": "Junctions",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multilocation",
                "Junctions"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 42,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 42,
            "type": {
              "path": [
                "xcm",
                "v1",
                "junction",
                "Junction"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 44,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 44,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 44,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "key",
                          "type": 47,
                          "typeName": "[u8; 20]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "name": null,
                          "type": 48,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "name": null,
                          "type": 45,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OnlyChild",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 49,
                          "typeName": "BodyId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "part",
                          "type": 50,
                          "typeName": "BodyPart",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 43,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Compact": {
                  "type": 4
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 44,
            "type": {
              "path": [
                "xcm",
                "v0",
                "junction",
                "NetworkId"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "name": null,
                          "type": 45,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Polkadot",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Kusama",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 45,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 10,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 46,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Compact": {
                  "type": 8
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 47,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Array": {
                  "len": 20,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 48,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Compact": {
                  "type": 6
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 49,
            "type": {
              "path": [
                "xcm",
                "v0",
                "junction",
                "BodyId"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "name": null,
                          "type": 45,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Executive",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Technical",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Legislative",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Judicial",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 50,
            "type": {
              "path": [
                "xcm",
                "v0",
                "junction",
                "BodyPart"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 51,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 52,
                      "typeName": "Vec<Instruction<Call>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 52,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 53
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 62,
                          "typeName": "Response",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 65,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 66,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 41,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "receive",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 56,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 70,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 51,
                          "typeName": "Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 51,
                          "typeName": "Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearError",
                      "fields": [

                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ticket",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [

                      ],
                      "index": 27,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multiasset",
                "MultiAssets"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 55,
                      "typeName": "Vec<MultiAsset>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 55,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 56
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 56,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multiasset",
                "MultiAsset"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 57,
                      "typeName": "AssetId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fun",
                      "type": 58,
                      "typeName": "Fungibility",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 57,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multiasset",
                "AssetId"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 58,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multiasset",
                "Fungibility"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 48,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 59,
                          "typeName": "AssetInstance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multiasset",
                "AssetInstance"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 48,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "[u8; 4]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "name": null,
                          "type": 60,
                          "typeName": "[u8; 8]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "name": null,
                          "type": 61,
                          "typeName": "[u8; 16]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Blob",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 60,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Array": {
                  "len": 8,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 61,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Array": {
                  "len": 16,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 62,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Response"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "name": null,
                          "type": 63,
                          "typeName": "Option<(u32, Error)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "super::Version",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 63,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 64
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 64,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 64,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  4,
                  36
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 65,
            "type": {
              "path": [
                "xcm",
                "v0",
                "OriginKind"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Native",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SovereignAccount",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Superuser",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Xcm",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 66,
            "type": {
              "path": [
                "xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 10,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 67,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multiasset",
                "MultiAssetFilter"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "name": null,
                          "type": 68,
                          "typeName": "WildMultiAsset",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 68,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multiasset",
                "WildMultiAsset"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "All",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 57,
                          "typeName": "AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fun",
                          "type": 69,
                          "typeName": "WildFungibility",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 69,
            "type": {
              "path": [
                "xcm",
                "v1",
                "multiasset",
                "WildFungibility"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonFungible",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 70,
            "type": {
              "path": [
                "xcm",
                "v2",
                "WeightLimit"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "name": null,
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 71,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 40
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 72,
            "type": {
              "path": [
                "xcm",
                "VersionedMultiAssets"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [
                        {
                          "name": null,
                          "type": 73,
                          "typeName": "Vec<v0::MultiAsset>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V1",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "v1::MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 73,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 74
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 74,
            "type": {
              "path": [
                "xcm",
                "v0",
                "multi_asset",
                "MultiAsset"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "All",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllFungible",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllNonFungible",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllAbstractFungible",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllAbstractNonFungible",
                      "fields": [
                        {
                          "name": "class",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllConcreteFungible",
                      "fields": [
                        {
                          "name": "id",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllConcreteNonFungible",
                      "fields": [
                        {
                          "name": "class",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AbstractFungible",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 48,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AbstractNonFungible",
                      "fields": [
                        {
                          "name": "class",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "instance",
                          "type": 59,
                          "typeName": "AssetInstance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ConcreteFungible",
                      "fields": [
                        {
                          "name": "id",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 48,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ConcreteNonFungible",
                      "fields": [
                        {
                          "name": "class",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "instance",
                          "type": 59,
                          "typeName": "AssetInstance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 75,
            "type": {
              "path": [
                "xcm",
                "v0",
                "multi_location",
                "MultiLocation"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 76,
            "type": {
              "path": [
                "xcm",
                "v0",
                "junction",
                "Junction"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Parent",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 44,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 44,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 44,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "key",
                          "type": 47,
                          "typeName": "[u8; 20]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "name": null,
                          "type": 48,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "name": null,
                          "type": 45,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OnlyChild",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 49,
                          "typeName": "BodyId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "part",
                          "type": 50,
                          "typeName": "BodyPart",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 77,
            "type": {
              "path": [
                "xcm",
                "VersionedMultiLocation"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [
                        {
                          "name": null,
                          "type": 75,
                          "typeName": "v0::MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V1",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "v1::MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 78,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "InvalidFormat",
                      "fields": [
                        {
                          "name": null,
                          "type": 60,
                          "typeName": "[u8; 8]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Downward message is invalid XCM.",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "UnsupportedVersion",
                      "fields": [
                        {
                          "name": null,
                          "type": 60,
                          "typeName": "[u8; 8]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Downward message is unsupported version of XCM.",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "ExecutedDownward",
                      "fields": [
                        {
                          "name": null,
                          "type": 60,
                          "typeName": "[u8; 8]",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 39,
                          "typeName": "Outcome",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Downward message executed with the given outcome.",
                        "\\[ id, outcome \\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 79,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "InvalidFormat",
                      "fields": [
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "MessageId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Downward message is invalid XCM."
                      ]
                    },
                    {
                      "name": "UnsupportedVersion",
                      "fields": [
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "MessageId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Downward message is unsupported version of XCM."
                      ]
                    },
                    {
                      "name": "ExecutedDownward",
                      "fields": [
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "MessageId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "outcome",
                          "type": 39,
                          "typeName": "Outcome",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Downward message executed with the given outcome."
                      ]
                    },
                    {
                      "name": "WeightExhausted",
                      "fields": [
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "MessageId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "remaining_weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "required_weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The weight limit for handling downward messages was reached."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "message_id",
                          "type": 1,
                          "typeName": "MessageId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "overweight_index",
                          "type": 8,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "required_weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Downward message is overweight and was placed in the overweight queue."
                      ]
                    },
                    {
                      "name": "OverweightServiced",
                      "fields": [
                        {
                          "name": "overweight_index",
                          "type": 8,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_used",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Downward message from the overweight queue was executed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 80,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Event"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "BatchInterrupted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "error",
                          "type": 22,
                          "typeName": "DispatchError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                        "well as the error."
                      ]
                    },
                    {
                      "name": "BatchCompleted",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Batch of dispatches completed fully with no error."
                      ]
                    },
                    {
                      "name": "BatchCompletedWithErrors",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Batch of dispatches completed but has errors."
                      ]
                    },
                    {
                      "name": "ItemCompleted",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with no error."
                      ]
                    },
                    {
                      "name": "ItemFailed",
                      "fields": [
                        {
                          "name": "error",
                          "type": 22,
                          "typeName": "DispatchError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with error."
                      ]
                    },
                    {
                      "name": "DispatchedAs",
                      "fields": [
                        {
                          "name": "result",
                          "type": 81,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A call was dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 81,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 82
                },
                {
                  "name": "E",
                  "type": 22
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "name": null,
                          "type": 82,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "name": null,
                          "type": 22,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 82,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [

                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 83,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "NewMultisig",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new multisig operation has begun."
                      ]
                    },
                    {
                      "name": "MultisigApproval",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "timepoint",
                          "type": 84,
                          "typeName": "Timepoint<T::BlockNumber>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A multisig operation has been approved by someone."
                      ]
                    },
                    {
                      "name": "MultisigExecuted",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "timepoint",
                          "type": 84,
                          "typeName": "Timepoint<T::BlockNumber>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "result",
                          "type": 81,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A multisig operation has been executed."
                      ]
                    },
                    {
                      "name": "MultisigCancelled",
                      "fields": [
                        {
                          "name": "cancelling",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "timepoint",
                          "type": 84,
                          "typeName": "Timepoint<T::BlockNumber>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A multisig operation has been cancelled."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 84,
            "type": {
              "path": [
                "pallet_multisig",
                "Timepoint"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 85,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "ProxyExecuted",
                      "fields": [
                        {
                          "name": "result",
                          "type": 81,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A proxy was executed correctly, with the given."
                      ]
                    },
                    {
                      "name": "AnonymousCreated",
                      "fields": [
                        {
                          "name": "anonymous",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 86,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "disambiguation_index",
                          "type": 87,
                          "typeName": "u16",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Anonymous account has been created by new proxy with given",
                        "disambiguation index and proxy type."
                      ]
                    },
                    {
                      "name": "Announced",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 9,
                          "typeName": "CallHashOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An announcement was placed to make a call in the future."
                      ]
                    },
                    {
                      "name": "ProxyAdded",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 86,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "T::BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proxy was added."
                      ]
                    },
                    {
                      "name": "ProxyRemoved",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 86,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "T::BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proxy was removed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 86,
            "type": {
              "path": [
                "pangolin_parachain_runtime",
                "pallets",
                "proxy",
                "ProxyType"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonTransfer",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CancelProxy",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Collator",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 87,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Primitive": "U16"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 88,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Sudid",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 81,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A sudo just took place. \\[result\\]"
                      ]
                    },
                    {
                      "name": "KeyChanged",
                      "fields": [
                        {
                          "name": "old_sudoer",
                          "type": 89,
                          "typeName": "Option<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The \\[sudoer\\] just switched identity; the old key is supplied if one existed."
                      ]
                    },
                    {
                      "name": "SudoAsDone",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 81,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A sudo just took place. \\[result\\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 89,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 90,
            "type": {
              "path": [
                "dp_common_runtime",
                "remote_governance",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Emergency",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Bridge's GRANDPA finality has stalled for a long time, enter the emergency mode."
                      ]
                    },
                    {
                      "name": "Recovery",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Recover from the emergency mode."
                      ]
                    },
                    {
                      "name": "RemoteCallEnacted",
                      "fields": [
                        {
                          "name": "result",
                          "type": 81,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Remote call just enacted. \\[result\\]"
                      ]
                    },
                    {
                      "name": "EmergencySafeguardDone",
                      "fields": [
                        {
                          "name": "result",
                          "type": 81,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Emergency safeguard just took place. \\[result\\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 91,
            "type": {
              "path": [
                "pallet_bridge_messages",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "ParameterUpdated",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "T::Parameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Pallet parameter has been updated."
                      ]
                    },
                    {
                      "name": "MessageAccepted",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Message has been accepted and is waiting to be delivered."
                      ]
                    },
                    {
                      "name": "MessagesDelivered",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 94,
                          "typeName": "DeliveredMessages",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Messages in the inclusive range have been delivered to the bridged chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 92,
            "type": {
              "path": [
                "pangolin_parachain_runtime",
                "bridges_message",
                "pangolin",
                "PangolinParachainToPangolinParameter"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "PangolinToPangolinParachainConversionRate",
                      "fields": [
                        {
                          "name": null,
                          "type": 93,
                          "typeName": "FixedU128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 93,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "u128",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "bp_messages",
                "DeliveredMessages"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "begin",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "end",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "dispatch_results",
                      "type": 95,
                      "typeName": "DispatchResultsBitVec",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 95,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "BitSequence": {
                  "bitStoreType": 2,
                  "bitOrderType": 96
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 96,
            "type": {
              "path": [
                "bitvec",
                "order",
                "Msb0"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 97,
            "type": {
              "path": [
                "pallet_bridge_dispatch",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "MessageRejected",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Message has been rejected before reaching dispatch."
                      ]
                    },
                    {
                      "name": "MessageVersionSpecMismatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "SpecVersion",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "SpecVersion",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Message has been rejected by dispatcher because of spec version mismatch.",
                        "Last two arguments are: expected and passed spec version."
                      ]
                    },
                    {
                      "name": "MessageWeightMismatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Message has been rejected by dispatcher because of weight mismatch.",
                        "Last two arguments are: expected and passed call weight."
                      ]
                    },
                    {
                      "name": "MessageSignatureMismatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Message signature mismatch."
                      ]
                    },
                    {
                      "name": "MessageCallDecodeFailed",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "We have failed to decode Call from the message."
                      ]
                    },
                    {
                      "name": "MessageCallRejected",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The call from the message has been rejected by the call filter."
                      ]
                    },
                    {
                      "name": "MessageDispatchPaymentFailed",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The origin account has failed to pay fee for dispatching the message."
                      ]
                    },
                    {
                      "name": "MessageDispatched",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 81,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Message has been dispatched with given result."
                      ]
                    },
                    {
                      "name": "_Dummy",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Phantom member, never used. Needed to handle multiple pallet instances."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 98,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  14,
                  8
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 99,
            "type": {
              "path": [
                "pallet_fee_market",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Enroll",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Relayer enrollment. \\[account_id, locked_collateral, relay_fee\\]"
                      ]
                    },
                    {
                      "name": "UpdateLockedCollateral",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Update relayer locked collateral. \\[account_id, new_collateral\\]"
                      ]
                    },
                    {
                      "name": "UpdateRelayFee",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Update relayer fee. \\[account_id, new_fee\\]"
                      ]
                    },
                    {
                      "name": "CancelEnrollment",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Relayer cancel enrollment. \\[account_id\\]"
                      ]
                    },
                    {
                      "name": "UpdateCollateralSlashProtect",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Update collateral slash protect value. \\[slash_protect_value\\]"
                      ]
                    },
                    {
                      "name": "UpdateAssignedRelayersNumber",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Update market assigned relayers numbers. \\[new_assigned_relayers_number\\]"
                      ]
                    },
                    {
                      "name": "FeeMarketSlash",
                      "fields": [
                        {
                          "name": null,
                          "type": 100,
                          "typeName": "SlashReport<T::AccountId, T::BlockNumber, BalanceOf<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Slash report"
                      ]
                    },
                    {
                      "name": "OrderCreated",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 32,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 101,
                          "typeName": "Option<T::BlockNumber>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Create new order. \\[lane_id, message_nonce, order_fee, assigned_relayers,",
                        "out_of_slots_time\\]"
                      ]
                    },
                    {
                      "name": "OrderReward",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 102,
                          "typeName": "RewardItem<T::AccountId, BalanceOf<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Reward distribute of the order. \\[lane_id, message_nonce, rewards\\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "pallet_fee_market",
                "types",
                "SlashReport"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "lane",
                      "type": 14,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "sent_time",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "confirm_time",
                      "type": 101,
                      "typeName": "Option<BlockNumber>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "delay_time",
                      "type": 101,
                      "typeName": "Option<BlockNumber>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "account_id",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 102,
            "type": {
              "path": [
                "pallet_fee_market",
                "s2s",
                "payment",
                "RewardItem"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "to_slot_relayer",
                      "type": 103,
                      "typeName": "Option<(AccountId, Balance)>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "to_treasury",
                      "type": 105,
                      "typeName": "Option<Balance>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "to_message_relayer",
                      "type": 103,
                      "typeName": "Option<(AccountId, Balance)>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "to_confirm_relayer",
                      "type": 103,
                      "typeName": "Option<(AccountId, Balance)>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 103,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 104
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 104,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 104,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  0,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 105,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 106,
            "type": {
              "path": [
                "dp_common_runtime",
                "helixbridge",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "TokenBurnAndRemoteUnlocked",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "RingBalance<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "TokenBurnAndRemoteUnlocked \\[lane_id, message_nonce, sender, recipient, amount\\]"
                      ]
                    },
                    {
                      "name": "TokenIssued",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "RingBalance<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "[recipient, amount]"
                      ]
                    },
                    {
                      "name": "RemoteBackingAccountUpdated",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Update remote backing address \\[account\\]"
                      ]
                    },
                    {
                      "name": "TokenUnlockedConfirmed",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "RingBalance<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Token unlocked confirmed from remote \\[lane_id, message_nonce, user, amount, result\\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 107,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Primitive": "Bool"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 108,
            "type": {
              "path": [
                "dp_common_runtime",
                "message_router",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "TargetXcmExecConfigChanged",
                      "fields": [
                        {
                          "name": "target_location",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "local_asset_units_per_second",
                          "type": 6,
                          "typeName": "AssetUnitsPerSecond",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Changed the amount of units target chain charging per execution second for local asset"
                      ]
                    },
                    {
                      "name": "RouteToMoonbeam",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tThe [event](https://docs.substrate.io/v3/runtime/events-and-errors) emitted\n\t\t\tby this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 109,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Finalization",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Initialization",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 110,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 9
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 111,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 112
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 112,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  4,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 113,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 43,
                      "typeName": "codec::Compact<u32>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "spec_name",
                      "type": 114,
                      "typeName": "sp_runtime::RuntimeString",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 114,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Primitive": "Str"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 115,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "fill_block",
                      "fields": [
                        {
                          "name": "ratio",
                          "type": 116,
                          "typeName": "Perbill",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A dispatch that will fill the block weight up to the given ratio."
                      ]
                    },
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Make some on-chain remark.",
                        "",
                        "# <weight>",
                        "- `O(1)`",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Set the number of pages in the WebAssembly environment's heap."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Set the new runtime code.",
                        "",
                        "# <weight>",
                        "- `O(C + S)` where `C` length of `code` and `S` complexity of `can_set_code`",
                        "- 1 call to `can_set_code`: `O(S)` (calls `sp_io::misc::runtime_version` which is",
                        "  expensive).",
                        "- 1 storage write (codec `O(C)`).",
                        "- 1 digest item.",
                        "- 1 event.",
                        "The weight of this function is dependent on the runtime, but generally this is very",
                        "expensive. We will treat this as a full block.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Set the new runtime code without doing any checks of the given `code`.",
                        "",
                        "# <weight>",
                        "- `O(C)` where `C` length of `code`",
                        "- 1 storage write (codec `O(C)`).",
                        "- 1 digest item.",
                        "- 1 event.",
                        "The weight of this function is dependent on the runtime. We will treat this as a full",
                        "block. # </weight>"
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 117,
                          "typeName": "Vec<KeyValue>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Set some items of storage."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 119,
                          "typeName": "Vec<Key>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Kill some items from storage."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 10,
                          "typeName": "Key",
                          "docs": [

                          ]
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Kill all storage items with a key that starts with the given prefix.",
                        "",
                        "**NOTE:** We rely on the Root origin to provide us the number of subkeys under",
                        "the prefix we are removing to accurately calculate the weight of this function."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Make some on-chain remark and emit event."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 116,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perbill"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 117,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 118
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 118,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  10,
                  10
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 119,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 10
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 120,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_block",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "per_class",
                      "type": 121,
                      "typeName": "PerDispatchClass<WeightsPerClass>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 121,
            "type": {
              "path": [
                "frame_support",
                "weights",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 122
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 122,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "operational",
                      "type": 122,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mandatory",
                      "type": 122,
                      "typeName": "T",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 122,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 123,
                      "typeName": "Option<Weight>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_total",
                      "type": 123,
                      "typeName": "Option<Weight>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "reserved",
                      "type": 123,
                      "typeName": "Option<Weight>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 123,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 8
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 8,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 125,
                      "typeName": "PerDispatchClass<u32>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 125,
            "type": {
              "path": [
                "frame_support",
                "weights",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 126,
            "type": {
              "path": [
                "frame_support",
                "weights",
                "RuntimeDbWeight"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "write",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 127,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 114,
                      "typeName": "RuntimeString",
                      "docs": [

                      ]
                    },
                    {
                      "name": "impl_name",
                      "type": 114,
                      "typeName": "RuntimeString",
                      "docs": [

                      ]
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "apis",
                      "type": 128,
                      "typeName": "ApisVec",
                      "docs": [

                      ]
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state_version",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 128,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 129
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 129,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 129,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 130
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 130,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  60,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 131,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 132,
            "type": {
              "path": [
                "polkadot_primitives",
                "v2",
                "PersistedValidationData"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 9
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "parent_head",
                      "type": 133,
                      "typeName": "HeadData",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relay_parent_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relay_parent_storage_root",
                      "type": 9,
                      "typeName": "H",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_pov_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 133,
            "type": {
              "path": [
                "polkadot_parachain",
                "primitives",
                "HeadData"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 10,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 134,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 135
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 135,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 135,
            "type": {
              "path": [
                "polkadot_primitives",
                "v2",
                "UpgradeRestriction"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Present",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 136,
            "type": {
              "path": [
                "sp_trie",
                "storage_proof",
                "StorageProof"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "trie_nodes",
                      "type": 137,
                      "typeName": "BTreeSet<Vec<u8>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 137,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 10
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 119,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 138,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "relay_state_snapshot",
                "MessagingStateSnapshot"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "dmq_mqc_head",
                      "type": 9,
                      "typeName": "relay_chain::Hash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relay_dispatch_queue_size",
                      "type": 112,
                      "typeName": "(u32, u32)",
                      "docs": [

                      ]
                    },
                    {
                      "name": "ingress_channels",
                      "type": 139,
                      "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "egress_channels",
                      "type": 139,
                      "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 139,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 140
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 140,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  37,
                  141
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 141,
            "type": {
              "path": [
                "polkadot_primitives",
                "v2",
                "AbridgedHrmpChannel"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "max_capacity",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_total_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "msg_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "total_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mqc_head",
                      "type": 35,
                      "typeName": "Option<Hash>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 142,
            "type": {
              "path": [
                "polkadot_primitives",
                "v2",
                "AbridgedHostConfiguration"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "max_code_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_head_data_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_upward_queue_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_upward_queue_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_upward_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_upward_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "hrmp_max_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "validation_upgrade_cooldown",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "validation_upgrade_delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 143,
            "type": {
              "path": [
                "cumulus_primitives_parachain_inherent",
                "MessageQueueChain"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 9,
                      "typeName": "RelayHash",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 144,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 37
                },
                {
                  "name": "V",
                  "type": 143
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 145,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 145,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 146
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 146,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  37,
                  143
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 147,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 148
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 148,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "OutboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 37
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 37,
                      "typeName": "Id",
                      "docs": [

                      ]
                    },
                    {
                      "name": "data",
                      "type": 10,
                      "typeName": "sp_std::vec::Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 149,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "set_validation_data",
                      "fields": [
                        {
                          "name": "data",
                          "type": 150,
                          "typeName": "ParachainInherentData",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Set the current validation data.",
                        "",
                        "This should be invoked exactly once per block. It will panic at the finalization",
                        "phase if the call was not invoked.",
                        "",
                        "The dispatch origin for this call must be `Inherent`",
                        "",
                        "As a side effect, this function upgrades the current validation function",
                        "if the appropriate time has come."
                      ]
                    },
                    {
                      "name": "sudo_send_upward_message",
                      "fields": [
                        {
                          "name": "message",
                          "type": 10,
                          "typeName": "UpwardMessage",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "authorize_upgrade",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 9,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "enact_authorized_upgrade",
                      "fields": [
                        {
                          "name": "code",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "cumulus_primitives_parachain_inherent",
                "ParachainInherentData"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "validation_data",
                      "type": 132,
                      "typeName": "PersistedValidationData",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relay_chain_state",
                      "type": 136,
                      "typeName": "sp_trie::StorageProof",
                      "docs": [

                      ]
                    },
                    {
                      "name": "downward_messages",
                      "type": 151,
                      "typeName": "Vec<InboundDownwardMessage>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "horizontal_messages",
                      "type": 153,
                      "typeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 151,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 152
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 152,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundDownwardMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "msg",
                      "type": 10,
                      "typeName": "DownwardMessage",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 153,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 37
                },
                {
                  "name": "V",
                  "type": 154
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 156,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 154,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 155
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 155,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "data",
                      "type": 10,
                      "typeName": "sp_std::vec::Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 156,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 157
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 157,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  37,
                  154
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 158,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "OverlappingUpgrades",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Attempt to upgrade validation function while existing upgrade pending"
                      ]
                    },
                    {
                      "name": "ProhibitedByPolkadot",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Polkadot currently prohibits this parachain from upgrading its validation function"
                      ]
                    },
                    {
                      "name": "TooBig",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The supplied validation function has compiled into a blob larger than Polkadot is",
                        "willing to run"
                      ]
                    },
                    {
                      "name": "ValidationDataNotAvailable",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The inherent which supplies the validation data did not run this block"
                      ]
                    },
                    {
                      "name": "HostConfigurationNotAvailable",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The inherent which supplies the host configuration did not run this block"
                      ]
                    },
                    {
                      "name": "NotScheduled",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "No validation function upgrade is currently scheduled."
                      ]
                    },
                    {
                      "name": "NothingAuthorized",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "No code upgrade has been authorized."
                      ]
                    },
                    {
                      "name": "Unauthorized",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "The given code upgrade has not been authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 159,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 46,
                          "typeName": "T::Moment",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Set the current time.",
                        "",
                        "This call should be invoked exactly once per block. It will panic at the finalization",
                        "phase, if this call hasn't been invoked by that time.",
                        "",
                        "The timestamp should be greater than the previous one by the amount specified by",
                        "`MinimumPeriod`.",
                        "",
                        "The dispatch origin for this call must be `Inherent`.",
                        "",
                        "# <weight>",
                        "- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)",
                        "- 1 storage read and 1 storage mutation (codec `O(1)`). (because of `DidUpdate::take` in",
                        "  `on_finalize`)",
                        "- 1 event handler `on_timestamp_set`. Must be `O(1)`.",
                        "# </weight>"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 160,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 161
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 163,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 161,
            "type": {
              "path": [
                "pallet_balances",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 60,
                      "typeName": "LockIdentifier",
                      "docs": [

                      ]
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "reasons",
                      "type": 162,
                      "typeName": "Reasons",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "pallet_balances",
                "Reasons"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Fee",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Misc",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "All",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 163,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 161
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 165
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 166,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 165,
            "type": {
              "path": [
                "pallet_balances",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 60
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 60,
                      "typeName": "ReserveIdentifier",
                      "docs": [

                      ]
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 166,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 165
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 167,
            "type": {
              "path": [
                "pallet_balances",
                "Releases"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "V1_0_0",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V2_0_0",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 168,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 48,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Transfer some liquid free balance to another account.",
                        "",
                        "`transfer` will set the `FreeBalance` of the sender and receiver.",
                        "If the sender's account is below the existential deposit as a result",
                        "of the transfer, the account will be reaped.",
                        "",
                        "The dispatch origin for this call must be `Signed` by the transactor.",
                        "",
                        "# <weight>",
                        "- Dependent on arguments but not critical, given proper implementations for input config",
                        "  types. See related functions below.",
                        "- It contains a limited number of reads and writes internally and no complex",
                        "  computation.",
                        "",
                        "Related functions:",
                        "",
                        "  - `ensure_can_withdraw` is always called internally but has a bounded complexity.",
                        "  - Transferring balances to accounts that did not exist before will cause",
                        "    `T::OnNewAccount::on_new_account` to be called.",
                        "  - Removing enough funds from an account will trigger `T::DustRemoval::on_unbalanced`.",
                        "  - `transfer_keep_alive` works the same way as `transfer`, but has an additional check",
                        "    that the transfer will not kill the origin account.",
                        "---------------------------------",
                        "- Origin account is already in memory, so no DB operations for them.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new_free",
                          "type": 48,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new_reserved",
                          "type": 48,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Set the balances of a given account.",
                        "",
                        "This will alter `FreeBalance` and `ReservedBalance` in storage. it will",
                        "also alter the total issuance of the system (`TotalIssuance`) appropriately.",
                        "If the new free or reserved balance is below the existential deposit,",
                        "it will reset the account nonce (`frame_system::AccountNonce`).",
                        "",
                        "The dispatch origin for this call is `root`."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 48,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Exactly as `transfer`, except the origin must be root and the source account may be",
                        "specified.",
                        "# <weight>",
                        "- Same as transfer, but additional read and write because the source account is not",
                        "  assumed to be in the overlay.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 48,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Same as the [`transfer`] call, but with a check that the transfer will not kill the",
                        "origin account.",
                        "",
                        "99% of the time you want [`transfer`] instead.",
                        "",
                        "[`transfer`]: struct.Pallet.html#method.transfer"
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        },
                        {
                          "name": "keep_alive",
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Transfer the entire transferable balance from the caller account.",
                        "",
                        "NOTE: This function only attempts to transfer _transferable_ balances. This means that",
                        "any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be",
                        "transferred by this function. To ensure that this function results in a killed account,",
                        "you might need to prepare the account by removing any reference counters, storage",
                        "deposits, etc...",
                        "",
                        "The dispatch origin of this call must be Signed.",
                        "",
                        "- `dest`: The recipient of the transfer.",
                        "- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all",
                        "  of the funds the account has, causing the sender account to be killed (false), or",
                        "  transfer everything except at least the existential deposit, which will guarantee to",
                        "  keep the sender account alive (true). # <weight>",
                        "- O(1). Just like transfer, but reading the user's transferable balance first.",
                        "  #</weight>"
                      ]
                    },
                    {
                      "name": "force_unreserve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Unreserve some balance from a user by force.",
                        "",
                        "Can only be called by ROOT."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 169,
            "type": {
              "path": [
                "sp_runtime",
                "multiaddress",
                "MultiAddress"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "AccountIndex",
                  "type": 82
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Id",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 170,
                          "typeName": "AccountIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Address32",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Address20",
                      "fields": [
                        {
                          "name": null,
                          "type": 47,
                          "typeName": "[u8; 20]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 170,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Compact": {
                  "type": 82
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 171,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "VestingBalance",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Vesting balance too high to send value"
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Account liquidity restrictions prevent withdrawal"
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Balance too low to send value"
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Value too low to create account due to existential deposit"
                      ]
                    },
                    {
                      "name": "KeepAlive",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account"
                      ]
                    },
                    {
                      "name": "ExistingVestingSchedule",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "A vesting schedule already exists for this account"
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist"
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Number of named reserves exceed MaxReserves"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 172,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V2",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 173,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 174
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 175,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 174,
            "type": {
              "path": [
                "pallet_authorship",
                "UncleEntryItem"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": 9
                },
                {
                  "name": "Author",
                  "type": 0
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "InclusionHeight",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Uncle",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "Option<Author>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 175,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 174
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 176,
            "type": {
              "path": [
                "pallet_authorship",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "set_uncles",
                      "fields": [
                        {
                          "name": "new_uncles",
                          "type": 177,
                          "typeName": "Vec<T::Header>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Provide a set of uncles."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 177,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 178
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 178,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": 179
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 9,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "number",
                      "type": 43,
                      "typeName": "Number",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state_root",
                      "type": 9,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 9,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "digest",
                      "type": 11,
                      "typeName": "Digest",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 179,
            "type": {
              "path": [
                "sp_runtime",
                "traits",
                "BlakeTwo256"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 180,
            "type": {
              "path": [
                "pallet_authorship",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "InvalidUncleParent",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The uncle parent not in the chain."
                      ]
                    },
                    {
                      "name": "UnclesAlreadySet",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Uncles already set in the block."
                      ]
                    },
                    {
                      "name": "TooManyUncles",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Too many uncles."
                      ]
                    },
                    {
                      "name": "GenesisUncle",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The uncle is genesis."
                      ]
                    },
                    {
                      "name": "TooHighUncle",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The uncle is too high in chain."
                      ]
                    },
                    {
                      "name": "UncleAlreadyIncluded",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The uncle is already included."
                      ]
                    },
                    {
                      "name": "OldUncle",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "The uncle isn't recent enough to be included."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 181,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 32,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 182,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 183
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 184,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 183,
            "type": {
              "path": [
                "pallet_collator_selection",
                "pallet",
                "CandidateInfo"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 184,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 183
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 185,
            "type": {
              "path": [
                "pallet_collator_selection",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "set_invulnerables",
                      "fields": [
                        {
                          "name": "new",
                          "type": 32,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Set the list of invulnerable (fixed) collators."
                      ]
                    },
                    {
                      "name": "set_desired_candidates",
                      "fields": [
                        {
                          "name": "max",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Set the ideal number of collators (not including the invulnerables).",
                        "If lowering this number, then the number of running collators could be higher than this figure.",
                        "Aside from that edge case, there should be no other way to have more collators than the desired number."
                      ]
                    },
                    {
                      "name": "set_candidacy_bond",
                      "fields": [
                        {
                          "name": "bond",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Set the candidacy bond amount."
                      ]
                    },
                    {
                      "name": "register_as_candidate",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Register this account as a collator candidate. The account must (a) already have",
                        "registered session keys and (b) be able to reserve the `CandidacyBond`.",
                        "",
                        "This call is not available to `Invulnerable` collators."
                      ]
                    },
                    {
                      "name": "leave_intent",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Deregister `origin` as a collator candidate. Note that the collator can only leave on",
                        "session change. The `CandidacyBond` will be unreserved immediately.",
                        "",
                        "This call will fail if the total number of candidates would drop below `MinCandidates`.",
                        "",
                        "This call is not available to `Invulnerable` collators."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 186,
            "type": {
              "path": [
                "pallet_collator_selection",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "TooManyCandidates",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Too many candidates"
                      ]
                    },
                    {
                      "name": "TooFewCandidates",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Too few candidates"
                      ]
                    },
                    {
                      "name": "Unknown",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Unknown error"
                      ]
                    },
                    {
                      "name": "Permission",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Permission issue"
                      ]
                    },
                    {
                      "name": "AlreadyCandidate",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "User is already a candidate"
                      ]
                    },
                    {
                      "name": "NotCandidate",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "User is not a candidate"
                      ]
                    },
                    {
                      "name": "TooManyInvulnerables",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Too many invulnerables"
                      ]
                    },
                    {
                      "name": "AlreadyInvulnerable",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "User is already an Invulnerable"
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Account has no associated validator ID"
                      ]
                    },
                    {
                      "name": "ValidatorNotRegistered",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "Validator ID is not yet registered"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 187,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 188
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 188,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  0,
                  189
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 189,
            "type": {
              "path": [
                "pangolin_parachain_runtime",
                "pallets",
                "session",
                "SessionKeys"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "aura",
                      "type": 190,
                      "typeName": "</*«*/ Aura /*»*/ as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 190,
            "type": {
              "path": [
                "sp_consensus_aura",
                "sr25519",
                "app_sr25519",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 191,
                      "typeName": "sr25519::Public",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 191,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 192,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 4
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 193,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  194,
                  10
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 194,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "[u8; 4]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 195,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 189,
                          "typeName": "T::Keys",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proof",
                          "type": 10,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Sets the session key(s) of the function caller to `keys`.",
                        "Allows an account to set its session key prior to becoming a validator.",
                        "This doesn't take effect until the next session.",
                        "",
                        "The dispatch origin of this function must be signed.",
                        "",
                        "# <weight>",
                        "- Complexity: `O(1)`. Actual cost depends on the number of length of",
                        "  `T::Keys::key_ids()` which is fixed.",
                        "- DbReads: `origin account`, `T::ValidatorIdOf`, `NextKeys`",
                        "- DbWrites: `origin account`, `NextKeys`",
                        "- DbReads per key id: `KeyOwner`",
                        "- DbWrites per key id: `KeyOwner`",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "purge_keys",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Removes any session key(s) of the function caller.",
                        "",
                        "This doesn't take effect until the next session.",
                        "",
                        "The dispatch origin of this function must be Signed and the account must be either be",
                        "convertible to a validator ID using the chain's typical addressing system (this usually",
                        "means being a controller account) or directly convertible into a validator ID (which",
                        "usually means being a stash account).",
                        "",
                        "# <weight>",
                        "- Complexity: `O(1)` in number of key types. Actual cost depends on the number of length",
                        "  of `T::Keys::key_ids()` which is fixed.",
                        "- DbReads: `T::ValidatorIdOf`, `NextKeys`, `origin account`",
                        "- DbWrites: `NextKeys`, `origin account`",
                        "- DbWrites per key id: `KeyOwner`",
                        "# </weight>"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 196,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "InvalidProof",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Invalid ownership proof."
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "No associated validator ID for account."
                      ]
                    },
                    {
                      "name": "DuplicatedKey",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Registered duplicate key."
                      ]
                    },
                    {
                      "name": "NoKeys",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "No keys are associated with this account."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Key setting account is not live, so it's impossible to associate keys."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the session pallet."
              ]
            }
          },
          {
            "id": 197,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 190
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 198,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 198,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 190
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 199,
            "type": {
              "path": [
                "sp_consensus_slots",
                "Slot"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 8,
                      "typeName": "u64",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 200,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 201
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 201,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "InboundChannelDetails"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "sender",
                      "type": 37,
                      "typeName": "ParaId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state",
                      "type": 202,
                      "typeName": "InboundState",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message_metadata",
                      "type": 203,
                      "typeName": "Vec<(RelayBlockNumber, XcmpMessageFormat)>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 202,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "InboundState"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 203,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 204
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 204,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  4,
                  205
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 205,
            "type": {
              "path": [
                "polkadot_parachain",
                "primitives",
                "XcmpMessageFormat"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "ConcatenatedVersionedXcm",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ConcatenatedEncodedBlob",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Signals",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 206,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  37,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 207,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 208
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 208,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "OutboundChannelDetails"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 37,
                      "typeName": "ParaId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state",
                      "type": 209,
                      "typeName": "OutboundState",
                      "docs": [

                      ]
                    },
                    {
                      "name": "signals_exist",
                      "type": 107,
                      "typeName": "bool",
                      "docs": [

                      ]
                    },
                    {
                      "name": "first_index",
                      "type": 87,
                      "typeName": "u16",
                      "docs": [

                      ]
                    },
                    {
                      "name": "last_index",
                      "type": 87,
                      "typeName": "u16",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 209,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "OutboundState"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 210,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  37,
                  87
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 211,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "QueueConfigData"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "suspend_threshold",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "drop_threshold",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "resume_threshold",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "threshold_weight",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "weight_restrict_decay",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "xcmp_max_individual_weight",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 212,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  37,
                  4,
                  10
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 213,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "service_overweight",
                      "fields": [
                        {
                          "name": "index",
                          "type": 8,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Services a single overweight XCM.",
                        "",
                        "- `origin`: Must pass `ExecuteOverweightOrigin`.",
                        "- `index`: The index of the overweight XCM to service",
                        "- `weight_limit`: The amount of weight that XCM execution may take.",
                        "",
                        "Errors:",
                        "- `BadOverweightIndex`: XCM under `index` is not found in the `Overweight` storage map.",
                        "- `BadXcm`: XCM under `index` cannot be properly decoded into a valid XCM format.",
                        "- `WeightOverLimit`: XCM execution may use greater `weight_limit`.",
                        "",
                        "Events:",
                        "- `OverweightServiced`: On success."
                      ]
                    },
                    {
                      "name": "suspend_xcm_execution",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Suspends all XCM executions for the XCMP queue, regardless of the sender's origin.",
                        "",
                        "- `origin`: Must pass `ControllerOrigin`."
                      ]
                    },
                    {
                      "name": "resume_xcm_execution",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Resumes all XCM executions for the XCMP queue.",
                        "",
                        "Note that this function doesn't change the status of the in/out bound channels.",
                        "",
                        "- `origin`: Must pass `ControllerOrigin`."
                      ]
                    },
                    {
                      "name": "update_suspend_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Overwrites the number of pages of messages which must be in the queue for the other side to be told to",
                        "suspend their sending.",
                        "",
                        "- `origin`: Must pass `Root`.",
                        "- `new`: Desired value for `QueueConfigData.suspend_value`"
                      ]
                    },
                    {
                      "name": "update_drop_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Overwrites the number of pages of messages which must be in the queue after which we drop any further",
                        "messages from the channel.",
                        "",
                        "- `origin`: Must pass `Root`.",
                        "- `new`: Desired value for `QueueConfigData.drop_threshold`"
                      ]
                    },
                    {
                      "name": "update_resume_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Overwrites the number of pages of messages which the queue must be reduced to before it signals that",
                        "message sending may recommence after it has been suspended.",
                        "",
                        "- `origin`: Must pass `Root`.",
                        "- `new`: Desired value for `QueueConfigData.resume_threshold`"
                      ]
                    },
                    {
                      "name": "update_threshold_weight",
                      "fields": [
                        {
                          "name": "new",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Overwrites the amount of remaining weight under which we stop processing messages.",
                        "",
                        "- `origin`: Must pass `Root`.",
                        "- `new`: Desired value for `QueueConfigData.threshold_weight`"
                      ]
                    },
                    {
                      "name": "update_weight_restrict_decay",
                      "fields": [
                        {
                          "name": "new",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Overwrites the speed to which the available weight approaches the maximum weight.",
                        "A lower number results in a faster progression. A value of 1 makes the entire weight available initially.",
                        "",
                        "- `origin`: Must pass `Root`.",
                        "- `new`: Desired value for `QueueConfigData.weight_restrict_decay`."
                      ]
                    },
                    {
                      "name": "update_xcmp_max_individual_weight",
                      "fields": [
                        {
                          "name": "new",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Overwrite the maximum amount of weight any individual message may consume.",
                        "Messages above this weight go into the overweight queue and may only be serviced explicitly.",
                        "",
                        "- `origin`: Must pass `Root`.",
                        "- `new`: Desired value for `QueueConfigData.xcmp_max_individual_weight`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 214,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "FailedToSend",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Failed to send XCM message."
                      ]
                    },
                    {
                      "name": "BadXcmOrigin",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Bad XCM origin."
                      ]
                    },
                    {
                      "name": "BadXcm",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Bad XCM data."
                      ]
                    },
                    {
                      "name": "BadOverweightIndex",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Bad overweight index."
                      ]
                    },
                    {
                      "name": "WeightOverLimit",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Provided weight is possibly not enough to execute the message."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 215,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "QueryStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "fields": [
                        {
                          "name": "responder",
                          "type": 77,
                          "typeName": "VersionedMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_notify",
                          "type": 216,
                          "typeName": "Option<(u8, u8)>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "timeout",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "VersionNotifier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 77,
                          "typeName": "VersionedMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_active",
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Ready",
                      "fields": [
                        {
                          "name": "response",
                          "type": 218,
                          "typeName": "VersionedResponse",
                          "docs": [

                          ]
                        },
                        {
                          "name": "at",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 216,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 217
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 217,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 217,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  2,
                  2
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 218,
            "type": {
              "path": [
                "xcm",
                "VersionedResponse"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [
                        {
                          "name": null,
                          "type": 219,
                          "typeName": "v0::Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V1",
                      "fields": [
                        {
                          "name": null,
                          "type": 220,
                          "typeName": "v1::Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 62,
                          "typeName": "v2::Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 219,
            "type": {
              "path": [
                "xcm",
                "v0",
                "Response"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 220,
            "type": {
              "path": [
                "xcm",
                "v1",
                "Response"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "super::Version",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 221,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  4,
                  77
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 222,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  8,
                  8,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 223,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 224
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 225,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 224,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  77,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 225,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 224
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 226,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "VersionMigrationStage"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "MigrateSupportedVersion",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MigrateVersionNotifiers",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotifyCurrentTargets",
                      "fields": [
                        {
                          "name": null,
                          "type": 227,
                          "typeName": "Option<Vec<u8>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MigrateAndNotifyOldTargets",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 227,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 10
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 228,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "send",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 229,
                          "typeName": "Box<VersionedXcm<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Teleport some assets from the local chain to some destination chain.",
                        "",
                        "Fee payment on the destination side is made from the asset in the `assets` vector of",
                        "index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,",
                        "with all fees taken as needed from the asset.",
                        "",
                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                        "  an `AccountId32` value.",
                        "- `assets`: The assets to be withdrawn. The first item should be the currency used to to pay the fee on the",
                        "  `dest` side. May not be empty.",
                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                        "  fees."
                      ]
                    },
                    {
                      "name": "reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer some assets from the local chain to the sovereign account of a destination",
                        "chain and forward a notification XCM.",
                        "",
                        "Fee payment on the destination side is made from the asset in the `assets` vector of",
                        "index `fee_asset_item`. The weight limit for fees is not provided and thus is unlimited,",
                        "with all fees taken as needed from the asset.",
                        "",
                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                        "  an `AccountId32` value.",
                        "- `assets`: The assets to be withdrawn. This should include the assets used to pay the fee on the",
                        "  `dest` side.",
                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                        "  fees."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "message",
                          "type": 238,
                          "typeName": "Box<VersionedXcm<<T as SysConfig>::Call>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Execute an XCM message from a local, signed, origin.",
                        "",
                        "An event is deposited indicating whether `msg` could be executed completely or only",
                        "partially.",
                        "",
                        "No more than `max_weight` will be used in its attempted execution. If this is less than the",
                        "maximum amount of weight that the message could take to be executed, then no execution",
                        "attempt will be made.",
                        "",
                        "NOTE: A successful return to this does *not* imply that the `msg` was executed successfully",
                        "to completion; only that *some* of it was executed."
                      ]
                    },
                    {
                      "name": "force_xcm_version",
                      "fields": [
                        {
                          "name": "location",
                          "type": 40,
                          "typeName": "Box<MultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm_version",
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Extoll that a particular destination can be communicated with through a particular",
                        "version of XCM.",
                        "",
                        "- `origin`: Must be Root.",
                        "- `location`: The destination that is being described.",
                        "- `xcm_version`: The latest version of XCM that `location` supports."
                      ]
                    },
                    {
                      "name": "force_default_xcm_version",
                      "fields": [
                        {
                          "name": "maybe_xcm_version",
                          "type": 101,
                          "typeName": "Option<XcmVersion>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Set a safe XCM version (the version that XCM should be encoded with if the most recent",
                        "version a destination can accept is unknown).",
                        "",
                        "- `origin`: Must be Root.",
                        "- `maybe_xcm_version`: The default XCM encoding version, or `None` to disable."
                      ]
                    },
                    {
                      "name": "force_subscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Ask a location to notify us regarding their XCM version and any changes to it.",
                        "",
                        "- `origin`: Must be Root.",
                        "- `location`: The location to which we should subscribe for XCM version notifications."
                      ]
                    },
                    {
                      "name": "force_unsubscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Require that a particular destination should no longer notify us regarding any XCM",
                        "version changes.",
                        "",
                        "- `origin`: Must be Root.",
                        "- `location`: The location to which we are currently subscribed for XCM version",
                        "  notifications which we no longer desire."
                      ]
                    },
                    {
                      "name": "limited_reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 70,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Transfer some assets from the local chain to the sovereign account of a destination",
                        "chain and forward a notification XCM.",
                        "",
                        "Fee payment on the destination side is made from the asset in the `assets` vector of",
                        "index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight",
                        "is needed than `weight_limit`, then the operation will fail and the assets send may be",
                        "at risk.",
                        "",
                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                        "  an `AccountId32` value.",
                        "- `assets`: The assets to be withdrawn. This should include the assets used to pay the fee on the",
                        "  `dest` side.",
                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                        "  fees.",
                        "- `weight_limit`: The remote-side weight limit, if any, for the XCM fee purchase."
                      ]
                    },
                    {
                      "name": "limited_teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 77,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 72,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 70,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Teleport some assets from the local chain to some destination chain.",
                        "",
                        "Fee payment on the destination side is made from the asset in the `assets` vector of",
                        "index `fee_asset_item`, up to enough to pay for `weight_limit` of weight. If more weight",
                        "is needed than `weight_limit`, then the operation will fail and the assets send may be",
                        "at risk.",
                        "",
                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                        "  an `AccountId32` value.",
                        "- `assets`: The assets to be withdrawn. The first item should be the currency used to to pay the fee on the",
                        "  `dest` side. May not be empty.",
                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                        "  fees.",
                        "- `weight_limit`: The remote-side weight limit, if any, for the XCM fee purchase."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 229,
            "type": {
              "path": [
                "xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [
                        {
                          "name": null,
                          "type": 230,
                          "typeName": "v0::Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V1",
                      "fields": [
                        {
                          "name": null,
                          "type": 234,
                          "typeName": "v1::Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 51,
                          "typeName": "v2::Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 230,
            "type": {
              "path": [
                "xcm",
                "v0",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposit",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TeleportAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 219,
                          "typeName": "Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 65,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 66,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RelayedFrom",
                      "fields": [
                        {
                          "name": "who",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 230,
                          "typeName": "alloc::boxed::Box<Xcm<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 231,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 232
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 232,
            "type": {
              "path": [
                "xcm",
                "v0",
                "order",
                "Order"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "receive",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 74,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "debt",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "halt_on_error",
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 233,
                          "typeName": "Vec<Xcm<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 233,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 230
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 234,
            "type": {
              "path": [
                "xcm",
                "v1",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 220,
                          "typeName": "Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 65,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 66,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RelayedFrom",
                      "fields": [
                        {
                          "name": "who",
                          "type": 41,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 234,
                          "typeName": "alloc::boxed::Box<Xcm<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 235,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 236
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 236,
            "type": {
              "path": [
                "xcm",
                "v1",
                "order",
                "Order"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "receive",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 56,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "debt",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "halt_on_error",
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "instructions",
                          "type": 237,
                          "typeName": "Vec<Xcm<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 237,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 234
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 238,
            "type": {
              "path": [
                "xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [
                        {
                          "name": null,
                          "type": 239,
                          "typeName": "v0::Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V1",
                      "fields": [
                        {
                          "name": null,
                          "type": 244,
                          "typeName": "v1::Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 248,
                          "typeName": "v2::Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 239,
            "type": {
              "path": [
                "xcm",
                "v0",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 240,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposit",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 240,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TeleportAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 240,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 219,
                          "typeName": "Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 65,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 243,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RelayedFrom",
                      "fields": [
                        {
                          "name": "who",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 239,
                          "typeName": "alloc::boxed::Box<Xcm<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 240,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 241
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 241,
            "type": {
              "path": [
                "xcm",
                "v0",
                "order",
                "Order"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "receive",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 231,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 73,
                          "typeName": "Vec<MultiAsset>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 74,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "debt",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "halt_on_error",
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 242,
                          "typeName": "Vec<Xcm<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 242,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 239
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 243,
            "type": {
              "path": [
                "xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 10,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 244,
            "type": {
              "path": [
                "xcm",
                "v1",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 245,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 245,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 245,
                          "typeName": "Vec<Order<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 220,
                          "typeName": "Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 65,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 243,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RelayedFrom",
                      "fields": [
                        {
                          "name": "who",
                          "type": 41,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 244,
                          "typeName": "alloc::boxed::Box<Xcm<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 245,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 246
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 246,
            "type": {
              "path": [
                "xcm",
                "v1",
                "order",
                "Order"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "receive",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "effects",
                          "type": 235,
                          "typeName": "Vec<Order<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 56,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "debt",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "halt_on_error",
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "instructions",
                          "type": 247,
                          "typeName": "Vec<Xcm<Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 247,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 244
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 248,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 249,
                      "typeName": "Vec<Instruction<Call>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 249,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 250
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 250,
            "type": {
              "path": [
                "xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 62,
                          "typeName": "Response",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 65,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 243,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 41,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "receive",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 51,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 67,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 56,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 70,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 248,
                          "typeName": "Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 248,
                          "typeName": "Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearError",
                      "fields": [

                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 54,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ticket",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 46,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 46,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [

                      ],
                      "index": 27,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 251,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Unreachable",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The desired destination was unreachable, generally because there is a no way of routing",
                        "to it."
                      ]
                    },
                    {
                      "name": "SendFailure",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "There was some other issue (i.e. not to do with routing) in sending the message. Perhaps",
                        "a lack of space for buffering the message."
                      ]
                    },
                    {
                      "name": "Filtered",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The message execution fails the filter."
                      ]
                    },
                    {
                      "name": "UnweighableMessage",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The message's weight could not be determined."
                      ]
                    },
                    {
                      "name": "DestinationNotInvertible",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The destination `MultiLocation` provided cannot be inverted."
                      ]
                    },
                    {
                      "name": "Empty",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The assets to be sent are empty."
                      ]
                    },
                    {
                      "name": "CannotReanchor",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Could not re-anchor the assets to declare the fees for the destination chain."
                      ]
                    },
                    {
                      "name": "TooManyAssets",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Too many assets have been attempted for transfer."
                      ]
                    },
                    {
                      "name": "InvalidOrigin",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Origin is invalid for sending."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The version of the `Versioned` value used is not able to be interpreted."
                      ]
                    },
                    {
                      "name": "BadLocation",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "The given location could not be used (e.g. because it cannot be expressed in the",
                        "desired version of XCM)."
                      ]
                    },
                    {
                      "name": "NoSubscription",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "The referenced subscription could not be found."
                      ]
                    },
                    {
                      "name": "AlreadySubscribed",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "The location is invalid since it already has a subscription from us."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 252,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [

                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 253,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "ConfigData"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "max_individual",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 254,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "PageIndexData"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "begin_used",
                      "type": 4,
                      "typeName": "PageCounter",
                      "docs": [

                      ]
                    },
                    {
                      "name": "end_used",
                      "type": 4,
                      "typeName": "PageCounter",
                      "docs": [

                      ]
                    },
                    {
                      "name": "overweight_count",
                      "type": 8,
                      "typeName": "OverweightIndex",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 255,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 256
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 256,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  4,
                  10
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 257,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "service_overweight",
                      "fields": [
                        {
                          "name": "index",
                          "type": 8,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Service a single overweight message.",
                        "",
                        "- `origin`: Must pass `ExecuteOverweightOrigin`.",
                        "- `index`: The index of the overweight message to service.",
                        "- `weight_limit`: The amount of weight that message execution may take.",
                        "",
                        "Errors:",
                        "- `Unknown`: Message of `index` is unknown.",
                        "- `OverLimit`: Message execution may use greater than `weight_limit`.",
                        "",
                        "Events:",
                        "- `OverweightServiced`: On success."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 258,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Unknown",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The message index given is unknown."
                      ]
                    },
                    {
                      "name": "OverLimit",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The amount of weight given is possibly not enough for executing the message."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 259,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 260,
                          "typeName": "Vec<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Send a batch of dispatch calls.",
                        "",
                        "May be called from any origin.",
                        "",
                        "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                        "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                        "",
                        "If origin is root then call are dispatch without checking origin filter. (This includes",
                        "bypassing `frame_system::Config::BaseCallFilter`).",
                        "",
                        "# <weight>",
                        "- Complexity: O(C) where C is the number of calls to be batched.",
                        "# </weight>",
                        "",
                        "This will return `Ok` in all circumstances. To determine the success of the batch, an",
                        "event is deposited. If a call failed and the batch was interrupted, then the",
                        "`BatchInterrupted` event is deposited, along with the number of successful calls made",
                        "and the error of the failed call. If all were successful, then the `BatchCompleted`",
                        "event is deposited."
                      ]
                    },
                    {
                      "name": "as_derivative",
                      "fields": [
                        {
                          "name": "index",
                          "type": 87,
                          "typeName": "u16",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "Box<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Send a call through an indexed pseudonym of the sender.",
                        "",
                        "Filter from origin are passed along. The call will be dispatched with an origin which",
                        "use the same filter as the origin of this call.",
                        "",
                        "NOTE: If you need to ensure that any account-based filtering is not honored (i.e.",
                        "because you expect `proxy` to have been used prior in the call stack and you do not want",
                        "the call restrictions to apply to any sub-accounts), then use `as_multi_threshold_1`",
                        "in the Multisig pallet instead.",
                        "",
                        "NOTE: Prior to version *12, this was called `as_limited_sub`.",
                        "",
                        "The dispatch origin for this call must be _Signed_."
                      ]
                    },
                    {
                      "name": "batch_all",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 260,
                          "typeName": "Vec<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Send a batch of dispatch calls and atomically execute them.",
                        "The whole transaction will rollback and fail if any of the calls failed.",
                        "",
                        "May be called from any origin.",
                        "",
                        "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                        "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                        "",
                        "If origin is root then call are dispatch without checking origin filter. (This includes",
                        "bypassing `frame_system::Config::BaseCallFilter`).",
                        "",
                        "# <weight>",
                        "- Complexity: O(C) where C is the number of calls to be batched.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "dispatch_as",
                      "fields": [
                        {
                          "name": "as_origin",
                          "type": 301,
                          "typeName": "Box<T::PalletsOrigin>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "Box<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Dispatches a function call with a provided origin.",
                        "",
                        "The dispatch origin for this call must be _Root_.",
                        "",
                        "# <weight>",
                        "- O(1).",
                        "- Limited storage reads.",
                        "- One DB write (event).",
                        "- Weight of derivative `call` execution + T::WeightInfo::dispatch_as().",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "force_batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 260,
                          "typeName": "Vec<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Send a batch of dispatch calls.",
                        "Unlike `batch`, it allows errors and won't interrupt.",
                        "",
                        "May be called from any origin.",
                        "",
                        "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                        "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                        "",
                        "If origin is root then call are dispatch without checking origin filter. (This includes",
                        "bypassing `frame_system::Config::BaseCallFilter`).",
                        "",
                        "# <weight>",
                        "- Complexity: O(C) where C is the number of calls to be batched.",
                        "# </weight>"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 260,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 261
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 261,
            "type": {
              "path": [
                "pangolin_parachain_runtime",
                "Call"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "name": null,
                          "type": 115,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "name": null,
                          "type": 149,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "name": null,
                          "type": 159,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "name": null,
                          "type": 168,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Authorship",
                      "fields": [
                        {
                          "name": null,
                          "type": 176,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Authorship, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CollatorSelection",
                      "fields": [
                        {
                          "name": null,
                          "type": 185,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CollatorSelection, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "name": null,
                          "type": 195,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 213,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 228,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 257,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DmpQueue, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "name": null,
                          "type": 259,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "name": null,
                          "type": 262,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "name": null,
                          "type": 265,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "name": null,
                          "type": 267,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RemoteGovernance",
                      "fields": [
                        {
                          "name": null,
                          "type": 268,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RemoteGovernance, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgePangolinGrandpa",
                      "fields": [
                        {
                          "name": null,
                          "type": 269,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BridgePangolinGrandpa, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgePangolinMessages",
                      "fields": [
                        {
                          "name": null,
                          "type": 283,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BridgePangolinMessages, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PangolinFeeMarket",
                      "fields": [
                        {
                          "name": null,
                          "type": 298,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PangolinFeeMarket, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FromPangolinIssuing",
                      "fields": [
                        {
                          "name": null,
                          "type": 299,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FromPangolinIssuing, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessageRouter",
                      "fields": [
                        {
                          "name": null,
                          "type": 300,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageRouter, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 262,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "as_multi_threshold_1",
                      "fields": [
                        {
                          "name": "other_signatories",
                          "type": 32,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "Box<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Immediately dispatch a multi-signature call using a single approval from the caller.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "- `other_signatories`: The accounts (other than the sender) who are part of the",
                        "multi-signature, but do not participate in the approval process.",
                        "- `call`: The call to be executed.",
                        "",
                        "Result is equivalent to the dispatched result.",
                        "",
                        "# <weight>",
                        "O(Z + C) where Z is the length of the call and C its execution weight.",
                        "-------------------------------",
                        "- DB Weight: None",
                        "- Plus Call Weight",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 87,
                          "typeName": "u16",
                          "docs": [

                          ]
                        },
                        {
                          "name": "other_signatories",
                          "type": 32,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 263,
                          "typeName": "Option<Timepoint<T::BlockNumber>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 264,
                          "typeName": "OpaqueCall<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "store_call",
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Register approval for a dispatch to be made from a deterministic composite account if",
                        "approved by a total of `threshold - 1` of `other_signatories`.",
                        "",
                        "If there are enough, then dispatch the call.",
                        "",
                        "Payment: `DepositBase` will be reserved if this is the first approval, plus",
                        "`threshold` times `DepositFactor`. It is returned once this dispatch happens or",
                        "is cancelled.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "- `threshold`: The total number of approvals for this dispatch before it is executed.",
                        "- `other_signatories`: The accounts (other than the sender) who can approve this",
                        "dispatch. May not be empty.",
                        "- `maybe_timepoint`: If this is the first approval, then this must be `None`. If it is",
                        "not the first approval, then it must be `Some`, with the timepoint (block number and",
                        "transaction index) of the first approval transaction.",
                        "- `call`: The call to be executed.",
                        "",
                        "NOTE: Unless this is the final approval, you will generally want to use",
                        "`approve_as_multi` instead, since it only requires a hash of the call.",
                        "",
                        "Result is equivalent to the dispatched result if `threshold` is exactly `1`. Otherwise",
                        "on success, result is `Ok` and the result from the interior call, if it was executed,",
                        "may be found in the deposited `MultisigExecuted` event.",
                        "",
                        "# <weight>",
                        "- `O(S + Z + Call)`.",
                        "- Up to one balance-reserve or unreserve operation.",
                        "- One passthrough operation, one insert, both `O(S)` where `S` is the number of",
                        "  signatories. `S` is capped by `MaxSignatories`, with weight being proportional.",
                        "- One call encode & hash, both of complexity `O(Z)` where `Z` is tx-len.",
                        "- One encode & hash, both of complexity `O(S)`.",
                        "- Up to one binary search and insert (`O(logS + S)`).",
                        "- I/O: 1 read `O(S)`, up to 1 mutate `O(S)`. Up to one remove.",
                        "- One event.",
                        "- The weight of the `call`.",
                        "- Storage: inserts one item, value size bounded by `MaxSignatories`, with a deposit",
                        "  taken for its lifetime of `DepositBase + threshold * DepositFactor`.",
                        "-------------------------------",
                        "- DB Weight:",
                        "    - Reads: Multisig Storage, [Caller Account], Calls (if `store_call`)",
                        "    - Writes: Multisig Storage, [Caller Account], Calls (if `store_call`)",
                        "- Plus Call Weight",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "approve_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 87,
                          "typeName": "u16",
                          "docs": [

                          ]
                        },
                        {
                          "name": "other_signatories",
                          "type": 32,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 263,
                          "typeName": "Option<Timepoint<T::BlockNumber>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Register approval for a dispatch to be made from a deterministic composite account if",
                        "approved by a total of `threshold - 1` of `other_signatories`.",
                        "",
                        "Payment: `DepositBase` will be reserved if this is the first approval, plus",
                        "`threshold` times `DepositFactor`. It is returned once this dispatch happens or",
                        "is cancelled.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "- `threshold`: The total number of approvals for this dispatch before it is executed.",
                        "- `other_signatories`: The accounts (other than the sender) who can approve this",
                        "dispatch. May not be empty.",
                        "- `maybe_timepoint`: If this is the first approval, then this must be `None`. If it is",
                        "not the first approval, then it must be `Some`, with the timepoint (block number and",
                        "transaction index) of the first approval transaction.",
                        "- `call_hash`: The hash of the call to be executed.",
                        "",
                        "NOTE: If this is the final approval, you will want to use `as_multi` instead.",
                        "",
                        "# <weight>",
                        "- `O(S)`.",
                        "- Up to one balance-reserve or unreserve operation.",
                        "- One passthrough operation, one insert, both `O(S)` where `S` is the number of",
                        "  signatories. `S` is capped by `MaxSignatories`, with weight being proportional.",
                        "- One encode & hash, both of complexity `O(S)`.",
                        "- Up to one binary search and insert (`O(logS + S)`).",
                        "- I/O: 1 read `O(S)`, up to 1 mutate `O(S)`. Up to one remove.",
                        "- One event.",
                        "- Storage: inserts one item, value size bounded by `MaxSignatories`, with a deposit",
                        "  taken for its lifetime of `DepositBase + threshold * DepositFactor`.",
                        "----------------------------------",
                        "- DB Weight:",
                        "    - Read: Multisig Storage, [Caller Account]",
                        "    - Write: Multisig Storage, [Caller Account]",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "cancel_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 87,
                          "typeName": "u16",
                          "docs": [

                          ]
                        },
                        {
                          "name": "other_signatories",
                          "type": 32,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "timepoint",
                          "type": 84,
                          "typeName": "Timepoint<T::BlockNumber>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Cancel a pre-existing, on-going multisig transaction. Any deposit reserved previously",
                        "for this operation will be unreserved on success.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "- `threshold`: The total number of approvals for this dispatch before it is executed.",
                        "- `other_signatories`: The accounts (other than the sender) who can approve this",
                        "dispatch. May not be empty.",
                        "- `timepoint`: The timepoint (block number and transaction index) of the first approval",
                        "transaction for this dispatch.",
                        "- `call_hash`: The hash of the call to be executed.",
                        "",
                        "# <weight>",
                        "- `O(S)`.",
                        "- Up to one balance-reserve or unreserve operation.",
                        "- One passthrough operation, one insert, both `O(S)` where `S` is the number of",
                        "  signatories. `S` is capped by `MaxSignatories`, with weight being proportional.",
                        "- One encode & hash, both of complexity `O(S)`.",
                        "- One event.",
                        "- I/O: 1 read `O(S)`, one remove.",
                        "- Storage: removes one item.",
                        "----------------------------------",
                        "- DB Weight:",
                        "    - Read: Multisig Storage, [Caller Account], Refund Account, Calls",
                        "    - Write: Multisig Storage, [Caller Account], Refund Account, Calls",
                        "# </weight>"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 263,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 84
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 84,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 264,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "misc",
                "WrapperKeepOpaque"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 261
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 43,
                      "typeName": null,
                      "docs": [

                      ]
                    },
                    {
                      "name": null,
                      "type": 261,
                      "typeName": "T",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 265,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "proxy",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 266,
                          "typeName": "Option<T::ProxyType>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "Box<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Dispatch the given `call` from an account that the sender is authorised for through",
                        "`add_proxy`.",
                        "",
                        "Removes any corresponding announcement(s).",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "Parameters:",
                        "- `real`: The account that the proxy will make a call on behalf of.",
                        "- `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.",
                        "- `call`: The call to be made by the `real` account.",
                        "",
                        "# <weight>",
                        "Weight is a function of the number of proxies the user has (P).",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "add_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 86,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "T::BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Register a proxy account for the sender that is able to make calls on its behalf.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "Parameters:",
                        "- `proxy`: The account that the `caller` would like to make a proxy.",
                        "- `proxy_type`: The permissions allowed for this proxy account.",
                        "- `delay`: The announcement period required of the initial proxy. Will generally be",
                        "zero.",
                        "",
                        "# <weight>",
                        "Weight is a function of the number of proxies the user has (P).",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "remove_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 86,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "T::BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Unregister a proxy account for the sender.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "Parameters:",
                        "- `proxy`: The account that the `caller` would like to remove as a proxy.",
                        "- `proxy_type`: The permissions currently enabled for the removed proxy account.",
                        "",
                        "# <weight>",
                        "Weight is a function of the number of proxies the user has (P).",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "remove_proxies",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Unregister all proxy accounts for the sender.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "WARNING: This may be called on accounts created by `anonymous`, however if done, then",
                        "the unreserved fees will be inaccessible. **All access to this account will be lost.**",
                        "",
                        "# <weight>",
                        "Weight is a function of the number of proxies the user has (P).",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "anonymous",
                      "fields": [
                        {
                          "name": "proxy_type",
                          "type": 86,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "T::BlockNumber",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 87,
                          "typeName": "u16",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Spawn a fresh new account that is guaranteed to be otherwise inaccessible, and",
                        "initialize it with a proxy of `proxy_type` for `origin` sender.",
                        "",
                        "Requires a `Signed` origin.",
                        "",
                        "- `proxy_type`: The type of the proxy that the sender will be registered as over the",
                        "new account. This will almost always be the most permissive `ProxyType` possible to",
                        "allow for maximum flexibility.",
                        "- `index`: A disambiguation index, in case this is called multiple times in the same",
                        "transaction (e.g. with `utility::batch`). Unless you're using `batch` you probably just",
                        "want to use `0`.",
                        "- `delay`: The announcement period required of the initial proxy. Will generally be",
                        "zero.",
                        "",
                        "Fails with `Duplicate` if this has already been called in this transaction, from the",
                        "same sender, with the same parameters.",
                        "",
                        "Fails if there are insufficient funds to pay for deposit.",
                        "",
                        "# <weight>",
                        "Weight is a function of the number of proxies the user has (P).",
                        "# </weight>",
                        "TODO: Might be over counting 1 read"
                      ]
                    },
                    {
                      "name": "kill_anonymous",
                      "fields": [
                        {
                          "name": "spawner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 86,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 87,
                          "typeName": "u16",
                          "docs": [

                          ]
                        },
                        {
                          "name": "height",
                          "type": 43,
                          "typeName": "T::BlockNumber",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ext_index",
                          "type": 43,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Removes a previously spawned anonymous proxy.",
                        "",
                        "WARNING: **All access to this account will be lost.** Any funds held in it will be",
                        "inaccessible.",
                        "",
                        "Requires a `Signed` origin, and the sender account must have been created by a call to",
                        "`anonymous` with corresponding parameters.",
                        "",
                        "- `spawner`: The account that originally called `anonymous` to create this account.",
                        "- `index`: The disambiguation index originally passed to `anonymous`. Probably `0`.",
                        "- `proxy_type`: The proxy type originally passed to `anonymous`.",
                        "- `height`: The height of the chain when the call to `anonymous` was processed.",
                        "- `ext_index`: The extrinsic index in which the call to `anonymous` was processed.",
                        "",
                        "Fails with `NoPermission` in case the caller is not a previously created anonymous",
                        "account whose `anonymous` call has corresponding parameters.",
                        "",
                        "# <weight>",
                        "Weight is a function of the number of proxies the user has (P).",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "announce",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 9,
                          "typeName": "CallHashOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Publish the hash of a proxy-call that will be made in the future.",
                        "",
                        "This must be called some number of blocks before the corresponding `proxy` is attempted",
                        "if the delay associated with the proxy relationship is greater than zero.",
                        "",
                        "No more than `MaxPending` announcements may be made at any one time.",
                        "",
                        "This will take a deposit of `AnnouncementDepositFactor` as well as",
                        "`AnnouncementDepositBase` if there are no other pending announcements.",
                        "",
                        "The dispatch origin for this call must be _Signed_ and a proxy of `real`.",
                        "",
                        "Parameters:",
                        "- `real`: The account that the proxy will make a call on behalf of.",
                        "- `call_hash`: The hash of the call to be made by the `real` account.",
                        "",
                        "# <weight>",
                        "Weight is a function of:",
                        "- A: the number of announcements made.",
                        "- P: the number of proxies the user has.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "remove_announcement",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 9,
                          "typeName": "CallHashOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Remove a given announcement.",
                        "",
                        "May be called by a proxy account to remove a call they previously announced and return",
                        "the deposit.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "Parameters:",
                        "- `real`: The account that the proxy will make a call on behalf of.",
                        "- `call_hash`: The hash of the call to be made by the `real` account.",
                        "",
                        "# <weight>",
                        "Weight is a function of:",
                        "- A: the number of announcements made.",
                        "- P: the number of proxies the user has.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "reject_announcement",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 9,
                          "typeName": "CallHashOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Remove the given announcement of a delegate.",
                        "",
                        "May be called by a target (proxied) account to remove a call that one of their delegates",
                        "(`delegate`) has announced they want to execute. The deposit is returned.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "Parameters:",
                        "- `delegate`: The account that previously announced the call.",
                        "- `call_hash`: The hash of the call to be made.",
                        "",
                        "# <weight>",
                        "Weight is a function of:",
                        "- A: the number of announcements made.",
                        "- P: the number of proxies the user has.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "proxy_announced",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 266,
                          "typeName": "Option<T::ProxyType>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "Box<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Dispatch the given `call` from an account that the sender is authorized for through",
                        "`add_proxy`.",
                        "",
                        "Removes any corresponding announcement(s).",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "Parameters:",
                        "- `real`: The account that the proxy will make a call on behalf of.",
                        "- `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.",
                        "- `call`: The call to be made by the `real` account.",
                        "",
                        "# <weight>",
                        "Weight is a function of:",
                        "- A: the number of announcements made.",
                        "- P: the number of proxies the user has.",
                        "# </weight>"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 266,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 86
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 267,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "sudo",
                      "fields": [
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "Box<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Authenticates the sudo key and dispatches a function call with `Root` origin.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "# <weight>",
                        "- O(1).",
                        "- Limited storage reads.",
                        "- One DB write (event).",
                        "- Weight of derivative `call` execution + 10,000.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "sudo_unchecked_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "Box<<T as Config>::Call>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Authenticates the sudo key and dispatches a function call with `Root` origin.",
                        "This function does not check the weight of the call, and instead allows the",
                        "Sudo user to specify the weight of the call.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "# <weight>",
                        "- O(1).",
                        "- The weight of this call is defined by the caller.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "set_key",
                      "fields": [
                        {
                          "name": "new",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo",
                        "key.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "# <weight>",
                        "- O(1).",
                        "- Limited storage reads.",
                        "- One DB change.",
                        "# </weight>"
                      ]
                    },
                    {
                      "name": "sudo_as",
                      "fields": [
                        {
                          "name": "who",
                          "type": 169,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "Box<<T as Config>::Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Authenticates the sudo key and dispatches a function call with `Signed` origin from",
                        "a given account.",
                        "",
                        "The dispatch origin for this call must be _Signed_.",
                        "",
                        "# <weight>",
                        "- O(1).",
                        "- Limited storage reads.",
                        "- One DB write (event).",
                        "- Weight of derivative `call` execution + 10,000.",
                        "# </weight>"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 268,
            "type": {
              "path": [
                "dp_common_runtime",
                "remote_governance",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "emergency_safeguard",
                      "fields": [
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "AnyCall<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "enact_remote_call",
                      "fields": [
                        {
                          "name": "call",
                          "type": 261,
                          "typeName": "AnyCall<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Handle relay message sent from the source backing pallet with relay message"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 269,
            "type": {
              "path": [
                "pallet_bridge_grandpa",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "submit_finality_proof",
                      "fields": [
                        {
                          "name": "finality_target",
                          "type": 178,
                          "typeName": "Box<BridgedHeader<T, I>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "justification",
                          "type": 270,
                          "typeName": "GrandpaJustification<BridgedHeader<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Verify a target header is finalized according to the given finality proof.",
                        "",
                        "It will use the underlying storage pallet to fetch information about the current",
                        "authorities and best finalized header in order to verify that the header is finalized.",
                        "",
                        "If successful in verification, it will write the target header to the underlying storage",
                        "pallet."
                      ]
                    },
                    {
                      "name": "initialize",
                      "fields": [
                        {
                          "name": "init_data",
                          "type": 280,
                          "typeName": "super::InitializationData<BridgedHeader<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Bootstrap the bridge pallet with an initial header and authority set from which to sync.",
                        "",
                        "The initial configuration provided does not need to be the genesis header of the bridged",
                        "chain, it can be any arbitrary header. You can also provide the next scheduled set",
                        "change if it is already know.",
                        "",
                        "This function is only allowed to be called from a trusted origin and writes to storage",
                        "with practically no checks in terms of the validity of the data. It is important that",
                        "you ensure that valid data is being passed in."
                      ]
                    },
                    {
                      "name": "set_owner",
                      "fields": [
                        {
                          "name": "new_owner",
                          "type": 89,
                          "typeName": "Option<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Change `PalletOwner`.",
                        "",
                        "May only be called either by root, or by `PalletOwner`."
                      ]
                    },
                    {
                      "name": "set_operational",
                      "fields": [
                        {
                          "name": "operational",
                          "type": 107,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Halt or resume all pallet operations.",
                        "",
                        "May only be called either by root, or by `PalletOwner`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 270,
            "type": {
              "path": [
                "bp_header_chain",
                "justification",
                "GrandpaJustification"
              ],
              "params": [
                {
                  "name": "Header",
                  "type": 178
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "round",
                      "type": 8,
                      "typeName": "u64",
                      "docs": [

                      ]
                    },
                    {
                      "name": "commit",
                      "type": 271,
                      "typeName": "finality_grandpa::Commit<Header::Hash, Header::Number,\nAuthoritySignature, AuthorityId>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "votes_ancestries",
                      "type": 177,
                      "typeName": "Vec<Header>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 271,
            "type": {
              "path": [
                "finality_grandpa",
                "Commit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 9
                },
                {
                  "name": "N",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": 272
                },
                {
                  "name": "Id",
                  "type": 275
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 9,
                      "typeName": "H",
                      "docs": [

                      ]
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": [

                      ]
                    },
                    {
                      "name": "precommits",
                      "type": 277,
                      "typeName": "Vec<SignedPrecommit<H, N, S, Id>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 272,
            "type": {
              "path": [
                "sp_finality_grandpa",
                "app",
                "Signature"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 273,
                      "typeName": "ed25519::Signature",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 273,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Signature"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 274,
                      "typeName": "[u8; 64]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 274,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Array": {
                  "len": 64,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 275,
            "type": {
              "path": [
                "sp_finality_grandpa",
                "app",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 276,
                      "typeName": "ed25519::Public",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 276,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 277,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 278
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 278,
            "type": {
              "path": [
                "finality_grandpa",
                "SignedPrecommit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 9
                },
                {
                  "name": "N",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": 272
                },
                {
                  "name": "Id",
                  "type": 275
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "precommit",
                      "type": 279,
                      "typeName": "Precommit<H, N>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "signature",
                      "type": 272,
                      "typeName": "S",
                      "docs": [

                      ]
                    },
                    {
                      "name": "id",
                      "type": 275,
                      "typeName": "Id",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 279,
            "type": {
              "path": [
                "finality_grandpa",
                "Precommit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 9
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 9,
                      "typeName": "H",
                      "docs": [

                      ]
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 280,
            "type": {
              "path": [
                "bp_header_chain",
                "InitializationData"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 178
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "header",
                      "type": 178,
                      "typeName": "Box<H>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "authority_list",
                      "type": 281,
                      "typeName": "AuthorityList",
                      "docs": [

                      ]
                    },
                    {
                      "name": "set_id",
                      "type": 8,
                      "typeName": "SetId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "is_halted",
                      "type": 107,
                      "typeName": "bool",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 281,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 282
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 282,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  275,
                  8
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 283,
            "type": {
              "path": [
                "pallet_bridge_messages",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "set_owner",
                      "fields": [
                        {
                          "name": "new_owner",
                          "type": 89,
                          "typeName": "Option<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Change `PalletOwner`.",
                        "",
                        "May only be called either by root, or by `PalletOwner`."
                      ]
                    },
                    {
                      "name": "set_operating_mode",
                      "fields": [
                        {
                          "name": "operating_mode",
                          "type": 284,
                          "typeName": "OperatingMode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Halt or resume all/some pallet operations.",
                        "",
                        "May only be called either by root, or by `PalletOwner`."
                      ]
                    },
                    {
                      "name": "update_pallet_parameter",
                      "fields": [
                        {
                          "name": "parameter",
                          "type": 92,
                          "typeName": "T::Parameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Update pallet parameter.",
                        "",
                        "May only be called either by root, or by `PalletOwner`.",
                        "",
                        "The weight is: single read for permissions check + 2 writes for parameter value and",
                        "event."
                      ]
                    },
                    {
                      "name": "send_message",
                      "fields": [
                        {
                          "name": "lane_id",
                          "type": 14,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "payload",
                          "type": 285,
                          "typeName": "T::OutboundPayload",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delivery_and_dispatch_fee",
                          "type": 6,
                          "typeName": "T::OutboundMessageFee",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Send message over lane."
                      ]
                    },
                    {
                      "name": "increase_message_fee",
                      "fields": [
                        {
                          "name": "lane_id",
                          "type": 14,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "nonce",
                          "type": 8,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        },
                        {
                          "name": "additional_fee",
                          "type": 6,
                          "typeName": "T::OutboundMessageFee",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Pay additional fee for the message."
                      ]
                    },
                    {
                      "name": "receive_messages_proof",
                      "fields": [
                        {
                          "name": "relayer_id_at_bridged_chain",
                          "type": 0,
                          "typeName": "T::InboundRelayer",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proof",
                          "type": 295,
                          "typeName": "MessagesProofOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "messages_count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dispatch_weight",
                          "type": 8,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Receive messages proof from bridged chain.",
                        "",
                        "The weight of the call assumes that the transaction always brings outbound lane",
                        "state update. Because of that, the submitter (relayer) has no benefit of not including",
                        "this data in the transaction, so reward confirmations lags should be minimal."
                      ]
                    },
                    {
                      "name": "receive_messages_delivery_proof",
                      "fields": [
                        {
                          "name": "proof",
                          "type": 296,
                          "typeName": "MessagesDeliveryProofOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "relayers_state",
                          "type": 297,
                          "typeName": "UnrewardedRelayersState",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Receive messages delivery proof from bridged chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 284,
            "type": {
              "path": [
                "bp_messages",
                "OperatingMode"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RejectingOutboundMessages",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Halted",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 285,
            "type": {
              "path": [
                "bp_message_dispatch",
                "MessagePayload"
              ],
              "params": [
                {
                  "name": "SourceChainAccountId",
                  "type": 0
                },
                {
                  "name": "TargetChainAccountPublic",
                  "type": 286
                },
                {
                  "name": "TargetChainSignature",
                  "type": 289
                },
                {
                  "name": "Call",
                  "type": 10
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "SpecVersion",
                      "docs": [

                      ]
                    },
                    {
                      "name": "weight",
                      "type": 8,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "origin",
                      "type": 293,
                      "typeName": "CallOrigin<SourceChainAccountId, TargetChainAccountPublic,\nTargetChainSignature>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "dispatch_fee_payment",
                      "type": 294,
                      "typeName": "DispatchFeePayment",
                      "docs": [

                      ]
                    },
                    {
                      "name": "call",
                      "type": 10,
                      "typeName": "Call",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 286,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSigner"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 276,
                          "typeName": "ed25519::Public",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 191,
                          "typeName": "sr25519::Public",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "name": null,
                          "type": 287,
                          "typeName": "ecdsa::Public",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 287,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 288,
                      "typeName": "[u8; 33]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 288,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Array": {
                  "len": 33,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 289,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSignature"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 273,
                          "typeName": "ed25519::Signature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 290,
                          "typeName": "sr25519::Signature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "name": null,
                          "type": 291,
                          "typeName": "ecdsa::Signature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 290,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Signature"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 274,
                      "typeName": "[u8; 64]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 291,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Signature"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 292,
                      "typeName": "[u8; 65]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 292,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Array": {
                  "len": 65,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 293,
            "type": {
              "path": [
                "bp_message_dispatch",
                "CallOrigin"
              ],
              "params": [
                {
                  "name": "SourceChainAccountId",
                  "type": 0
                },
                {
                  "name": "TargetChainAccountPublic",
                  "type": 286
                },
                {
                  "name": "TargetChainSignature",
                  "type": 289
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "SourceRoot",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TargetAccount",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "SourceChainAccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 286,
                          "typeName": "TargetChainAccountPublic",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 289,
                          "typeName": "TargetChainSignature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SourceAccount",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "SourceChainAccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 294,
            "type": {
              "path": [
                "bp_runtime",
                "messages",
                "DispatchFeePayment"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "AtSourceChain",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AtTargetChain",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 295,
            "type": {
              "path": [
                "bridge_runtime_common",
                "messages",
                "target",
                "FromBridgedChainMessagesProof"
              ],
              "params": [
                {
                  "name": "BridgedHeaderHash",
                  "type": 9
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "bridged_header_hash",
                      "type": 9,
                      "typeName": "BridgedHeaderHash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "storage_proof",
                      "type": 119,
                      "typeName": "RawStorageProof",
                      "docs": [

                      ]
                    },
                    {
                      "name": "lane",
                      "type": 14,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonces_start",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonces_end",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 296,
            "type": {
              "path": [
                "bridge_runtime_common",
                "messages",
                "source",
                "FromBridgedChainMessagesDeliveryProof"
              ],
              "params": [
                {
                  "name": "BridgedHeaderHash",
                  "type": 9
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "bridged_header_hash",
                      "type": 9,
                      "typeName": "BridgedHeaderHash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "storage_proof",
                      "type": 119,
                      "typeName": "RawStorageProof",
                      "docs": [

                      ]
                    },
                    {
                      "name": "lane",
                      "type": 14,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 297,
            "type": {
              "path": [
                "bp_messages",
                "UnrewardedRelayersState"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "unrewarded_relayer_entries",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "messages_in_oldest_entry",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "total_messages",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 298,
            "type": {
              "path": [
                "pallet_fee_market",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "enroll_and_lock_collateral",
                      "fields": [
                        {
                          "name": "lock_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "relay_fee",
                          "type": 105,
                          "typeName": "Option<BalanceOf<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Any accounts can enroll to be a relayer by lock collateral. The relay fee is optional,",
                        "the default value is MinimumRelayFee in runtime. (Update market needed)",
                        "Note: One account can enroll only once."
                      ]
                    },
                    {
                      "name": "update_locked_collateral",
                      "fields": [
                        {
                          "name": "new_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Update locked collateral for enrolled relayer, only supporting lock more. (Update market",
                        "needed)"
                      ]
                    },
                    {
                      "name": "update_relay_fee",
                      "fields": [
                        {
                          "name": "new_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Update relay fee for enrolled relayer. (Update market needed)"
                      ]
                    },
                    {
                      "name": "cancel_enrollment",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Cancel enrolled relayer(Update market needed)"
                      ]
                    },
                    {
                      "name": "set_slash_protect",
                      "fields": [
                        {
                          "name": "slash_protect",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "set_assigned_relayers_number",
                      "fields": [
                        {
                          "name": "number",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 299,
            "type": {
              "path": [
                "dp_common_runtime",
                "helixbridge",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "issue_from_remote",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "RingBalance<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 0,
                          "typeName": "AccountId<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Handle relay message sent from the source backing pallet with relay message"
                      ]
                    },
                    {
                      "name": "burn_and_remote_unlock",
                      "fields": [
                        {
                          "name": "spec_version",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 8,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 48,
                          "typeName": "RingBalance<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee",
                          "type": 48,
                          "typeName": "RingBalance<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 0,
                          "typeName": "AccountId<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "set_remote_backing_account",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "AccountId<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "set_secure_limited_period",
                      "fields": [
                        {
                          "name": "period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "set_security_limitation_ring_amount",
                      "fields": [
                        {
                          "name": "limitation",
                          "type": 6,
                          "typeName": "RingBalance<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 300,
            "type": {
              "path": [
                "dp_common_runtime",
                "message_router",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "set_target_xcm_exec_config",
                      "fields": [
                        {
                          "name": "target_location",
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "local_asset_units_per_second",
                          "type": 6,
                          "typeName": "AssetUnitsPerSecond",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "forward_to_moonbeam",
                      "fields": [
                        {
                          "name": "message",
                          "type": 238,
                          "typeName": "Box<VersionedXcm<<T as frame_system::Config>::Call>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains one variant per dispatchable that can be called by an extrinsic."
              ]
            }
          },
          {
            "id": 301,
            "type": {
              "path": [
                "pangolin_parachain_runtime",
                "OriginCaller"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "system",
                      "fields": [
                        {
                          "name": null,
                          "type": 302,
                          "typeName": "frame_system::Origin<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 303,
                          "typeName": "pallet_xcm::Origin",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 304,
                          "typeName": "cumulus_pallet_xcm::Origin",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Void",
                      "fields": [
                        {
                          "name": null,
                          "type": 305,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::Void",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 302,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 303,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Origin"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Xcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Response",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 304,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Origin"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Relay",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SiblingParachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 37,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 305,
            "type": {
              "path": [
                "sp_core",
                "Void"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 306,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "TooManyCalls",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Too many calls batched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 307,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  0,
                  1
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 308,
            "type": {
              "path": [
                "pallet_multisig",
                "Multisig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "when",
                      "type": 84,
                      "typeName": "Timepoint<BlockNumber>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "approvals",
                      "type": 32,
                      "typeName": "Vec<AccountId>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 309,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  264,
                  0,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 310,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "MinimumThreshold",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Threshold must be 2 or greater."
                      ]
                    },
                    {
                      "name": "AlreadyApproved",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Call is already approved by this signatory."
                      ]
                    },
                    {
                      "name": "NoApprovalsNeeded",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Call doesn't need any (more) approvals."
                      ]
                    },
                    {
                      "name": "TooFewSignatories",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "There are too few signatories in the list."
                      ]
                    },
                    {
                      "name": "TooManySignatories",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "There are too many signatories in the list."
                      ]
                    },
                    {
                      "name": "SignatoriesOutOfOrder",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The signatories were provided out of order; they should be ordered."
                      ]
                    },
                    {
                      "name": "SenderInSignatories",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "The sender was contained in the other signatories; it shouldn't be."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Multisig operation not found when attempting to cancel."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Only the account that originally created the multisig is able to cancel it."
                      ]
                    },
                    {
                      "name": "NoTimepoint",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "No timepoint was given, yet the multisig operation is already underway."
                      ]
                    },
                    {
                      "name": "WrongTimepoint",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "A different timepoint was given to the multisig operation that is underway."
                      ]
                    },
                    {
                      "name": "UnexpectedTimepoint",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "A timepoint was given, yet no multisig operation is underway."
                      ]
                    },
                    {
                      "name": "MaxWeightTooLow",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "The maximum weight information provided was too low."
                      ]
                    },
                    {
                      "name": "AlreadyStored",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [
                        "The data to be stored is already stored."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 311,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  312,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 312,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 313
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 314,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 313,
            "type": {
              "path": [
                "pallet_proxy",
                "ProxyDefinition"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ProxyType",
                  "type": 86
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "delegate",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "proxy_type",
                      "type": 86,
                      "typeName": "ProxyType",
                      "docs": [

                      ]
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 314,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 313
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 315,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  316,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 316,
            "type": {
              "path": [
                "sp_runtime",
                "bounded",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 317
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 318,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 317,
            "type": {
              "path": [
                "pallet_proxy",
                "Announcement"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Hash",
                  "type": 9
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "real",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "call_hash",
                      "type": 9,
                      "typeName": "Hash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 318,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 317
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 319,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "TooMany",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "There are too many proxies registered or too many announcements pending."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Proxy registration not found."
                      ]
                    },
                    {
                      "name": "NotProxy",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Sender is not a proxy of the account to be proxied."
                      ]
                    },
                    {
                      "name": "Unproxyable",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "A call which is incompatible with the proxy type's filter was attempted."
                      ]
                    },
                    {
                      "name": "Duplicate",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Account is already a proxy."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Call may not be made by proxy because it may escalate its privileges."
                      ]
                    },
                    {
                      "name": "Unannounced",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Announcement, if made at all, was made too recently."
                      ]
                    },
                    {
                      "name": "NoSelfProxy",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Cannot add self as proxy."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 320,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "RequireSudo",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Sender must be the Sudo account"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the Sudo pallet"
              ]
            }
          },
          {
            "id": 321,
            "type": {
              "path": [
                "dp_common_runtime",
                "remote_governance",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "RequireSourceRoot",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Origin MUST be `SourceRoot`."
                      ]
                    },
                    {
                      "name": "EmergencyOnly",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Only available on emergency mode."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 322,
            "type": {
              "path": [
                "bp_header_chain",
                "AuthoritySet"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "authorities",
                      "type": 281,
                      "typeName": "AuthorityList",
                      "docs": [

                      ]
                    },
                    {
                      "name": "set_id",
                      "type": 8,
                      "typeName": "SetId",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 323,
            "type": {
              "path": [
                "pallet_bridge_grandpa",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "InvalidJustification",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The given justification is invalid for the given header."
                      ]
                    },
                    {
                      "name": "InvalidAuthoritySet",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The authority set from the underlying header chain is invalid."
                      ]
                    },
                    {
                      "name": "TooManyRequests",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "There are too many requests for the current window to handle."
                      ]
                    },
                    {
                      "name": "OldHeader",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The header being imported is older than the best finalized header known to the pallet."
                      ]
                    },
                    {
                      "name": "UnknownHeader",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The header is unknown to the pallet."
                      ]
                    },
                    {
                      "name": "UnsupportedScheduledChange",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The scheduled authority set change found in the header is unsupported by the pallet.",
                        "",
                        "This is the case for non-standard (e.g forced) authority set changes."
                      ]
                    },
                    {
                      "name": "NotInitialized",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "The pallet is not yet initialized."
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "The pallet has already been initialized."
                      ]
                    },
                    {
                      "name": "Halted",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "All pallet operations are halted."
                      ]
                    },
                    {
                      "name": "StorageRootMismatch",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The storage proof doesn't contains storage root. So it is invalid for given header."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 324,
            "type": {
              "path": [
                "bp_messages",
                "InboundLaneData"
              ],
              "params": [
                {
                  "name": "RelayerId",
                  "type": 0
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "relayers",
                      "type": 325,
                      "typeName": "VecDeque<UnrewardedRelayer<RelayerId>>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "last_confirmed_nonce",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 325,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 326
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 326,
            "type": {
              "path": [
                "bp_messages",
                "UnrewardedRelayer"
              ],
              "params": [
                {
                  "name": "RelayerId",
                  "type": 0
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "relayer",
                      "type": 0,
                      "typeName": "RelayerId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "messages",
                      "type": 94,
                      "typeName": "DeliveredMessages",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 327,
            "type": {
              "path": [
                "bp_messages",
                "OutboundLaneData"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "oldest_unpruned_nonce",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "latest_received_nonce",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "latest_generated_nonce",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 328,
            "type": {
              "path": [
                "bp_messages",
                "MessageKey"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "lane_id",
                      "type": 14,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonce",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 329,
            "type": {
              "path": [
                "bp_messages",
                "MessageData"
              ],
              "params": [
                {
                  "name": "Fee",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "payload",
                      "type": 10,
                      "typeName": "MessagePayload",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Fee",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 330,
            "type": {
              "path": [
                "pallet_bridge_messages",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Halted",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "All pallet operations are halted."
                      ]
                    },
                    {
                      "name": "MessageRejectedByChainVerifier",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Message has been treated as invalid by chain verifier."
                      ]
                    },
                    {
                      "name": "MessageRejectedByLaneVerifier",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Message has been treated as invalid by lane verifier."
                      ]
                    },
                    {
                      "name": "FailedToWithdrawMessageFee",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Submitter has failed to pay fee for delivering and dispatching messages."
                      ]
                    },
                    {
                      "name": "TooManyMessagesInTheProof",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The transaction brings too many messages."
                      ]
                    },
                    {
                      "name": "InvalidMessagesProof",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Invalid messages has been submitted."
                      ]
                    },
                    {
                      "name": "InvalidMessagesDeliveryProof",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Invalid messages delivery proof has been submitted."
                      ]
                    },
                    {
                      "name": "InvalidUnrewardedRelayers",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "The bridged chain has invalid `UnrewardedRelayers` in its storage (fatal for the lane)."
                      ]
                    },
                    {
                      "name": "InvalidUnrewardedRelayersState",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "The relayer has declared invalid unrewarded relayers state in the",
                        "`receive_messages_delivery_proof` call."
                      ]
                    },
                    {
                      "name": "MessageIsAlreadyDelivered",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The message someone is trying to work with (i.e. increase fee) is already-delivered."
                      ]
                    },
                    {
                      "name": "MessageIsNotYetSent",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "The message someone is trying to work with (i.e. increase fee) is not yet sent."
                      ]
                    },
                    {
                      "name": "TryingToConfirmMoreMessagesThanExpected",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "The number of actually confirmed messages is going to be larger than the number of",
                        "messages in the proof. This may mean that this or bridged chain storage is corrupted."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 331,
            "type": {
              "path": [
                "pallet_fee_market",
                "types",
                "Relayer"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "collateral",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 332,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 331
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 333,
            "type": {
              "path": [
                "pallet_fee_market",
                "types",
                "Order"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "lane",
                      "type": 14,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message",
                      "type": 8,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "sent_time",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "confirm_time",
                      "type": 101,
                      "typeName": "Option<BlockNumber>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "locked_collateral",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relayers",
                      "type": 334,
                      "typeName": "Vec<PriorRelayer<AccountId, BlockNumber, Balance>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 334,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Sequence": {
                  "type": 335
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 335,
            "type": {
              "path": [
                "pallet_fee_market",
                "types",
                "PriorRelayer"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "valid_range",
                      "type": 336,
                      "typeName": "Range<BlockNumber>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 336,
            "type": {
              "path": [
                "Range"
              ],
              "params": [
                {
                  "name": "Idx",
                  "type": 4
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "start",
                      "type": 4,
                      "typeName": "Idx",
                      "docs": [

                      ]
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "Idx",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 337,
            "type": {
              "path": [
                "frame_support",
                "PalletId"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 60,
                      "typeName": "[u8; 8]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 338,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Permill"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 339,
            "type": {
              "path": [
                "pallet_fee_market",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "InsufficientBalance",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Insufficient balance."
                      ]
                    },
                    {
                      "name": "AlreadyEnrolled",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The relayer has been enrolled."
                      ]
                    },
                    {
                      "name": "NotEnrolled",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "This relayer doesn't enroll ever."
                      ]
                    },
                    {
                      "name": "CollateralTooLow",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Locked collateral is too low to cover one order."
                      ]
                    },
                    {
                      "name": "StillHasOrdersNotConfirmed",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Update locked collateral is not allow since some orders are not confirm."
                      ]
                    },
                    {
                      "name": "RelayFeeTooLow",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The fee is lower than MinimumRelayFee."
                      ]
                    },
                    {
                      "name": "OccupiedRelayer",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "The relayer is occupied, and can't cancel enrollment now."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 340,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  6,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 341,
            "type": {
              "path": [
                "dp_common_runtime",
                "helixbridge",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "RingDailyLimited",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Redeem Daily Limited"
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Insufficient balance."
                      ]
                    },
                    {
                      "name": "NonceDuplicated",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Message nonce duplicated."
                      ]
                    },
                    {
                      "name": "BackingAccountNone",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Backing not configured"
                      ]
                    },
                    {
                      "name": "ValueOverFlow",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Issue value overflow"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Issuing pallet errors."
              ]
            }
          },
          {
            "id": 342,
            "type": {
              "path": [
                "dp_common_runtime",
                "message_router",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "TargetXcmExecNotConfig",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Not config the target paraId's info for XCM execution."
                      ]
                    },
                    {
                      "name": "UnweighableMessage",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The message's weight could not be determined."
                      ]
                    },
                    {
                      "name": "XcmExecutionFailed",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "XCM execution failed. https://github.com/paritytech/substrate/pull/10242"
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MultiLocationFull",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "MultiLocation value too large to descend further."
                      ]
                    },
                    {
                      "name": "XcmSendFailed",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Failed to send xcm."
                      ]
                    },
                    {
                      "name": "AccountIdConversionFailed",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [
                "\n\t\t\tCustom [dispatch errors](https://docs.substrate.io/v3/runtime/events-and-errors)\n\t\t\tof this pallet.\n\t\t\t"
              ]
            }
          },
          {
            "id": 343,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 169
                },
                {
                  "name": "Call",
                  "type": 261
                },
                {
                  "name": "Signature",
                  "type": 289
                },
                {
                  "name": "Extra",
                  "type": 344
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 10,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 344,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "Tuple": [
                  345,
                  346,
                  347,
                  348,
                  349,
                  351,
                  352,
                  353
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 345,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 346,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 347,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 348,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 349,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 350,
                      "typeName": "Era",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 350,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "params": [

              ],
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 27,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 28,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 29,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 30,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 31,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 35,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 37,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 38,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 39,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 40,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 41,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 42,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 43,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 44,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 45,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 46,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 47,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 48,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 49,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 50,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 51,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 52,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 53,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 54,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 55,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 56,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 57,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 58,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 59,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 60,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 61,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 62,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 63,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 64,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 65,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 66,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 67,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 68,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 69,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 70,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 71,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 72,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 73,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 74,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 75,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 76,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 77,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 78,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 79,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 80,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 81,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 82,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 83,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 84,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 85,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 86,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 87,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 88,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 89,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 90,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 91,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 92,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 93,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 94,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 95,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 96,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 97,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 98,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 99,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 100,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 101,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 102,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 103,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 104,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 105,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 106,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 107,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 108,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 109,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 110,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 111,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 112,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 113,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 114,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 115,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 116,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 117,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 118,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 119,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 120,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 121,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 122,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 123,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 124,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 125,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 126,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 127,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 128,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 129,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 130,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 131,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 132,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 133,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 134,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 135,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 136,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 137,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 138,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 139,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 140,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 141,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 142,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 143,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 144,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 145,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 146,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 147,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 148,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 149,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 150,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 151,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 152,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 153,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 154,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 155,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 156,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 157,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 158,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 159,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 160,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 161,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 162,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 163,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 164,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 165,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 166,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 167,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 168,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 169,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 170,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 171,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 172,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 173,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 174,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 175,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 176,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 177,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 178,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 179,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 180,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 181,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 182,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 183,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 184,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 185,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 186,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 187,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 188,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 189,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 190,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 191,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 192,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 193,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 194,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 195,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 196,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 197,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 198,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 199,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 200,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 201,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 202,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 203,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 204,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 205,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 206,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 207,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 208,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 209,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 210,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 211,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 212,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 213,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 214,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 215,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 216,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 217,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 218,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 219,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 220,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 221,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 222,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 223,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 224,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 225,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 226,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 227,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 228,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 229,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 230,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 231,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 232,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 233,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 234,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 235,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 236,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 237,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 238,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 239,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 240,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 241,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 242,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 243,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 244,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 245,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 246,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 247,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 248,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 249,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 250,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 251,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 252,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 253,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 254,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 255,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 351,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 43,
                      "typeName": "T::Index",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 352,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 353,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "ChargeTransactionPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 48,
                      "typeName": "BalanceOf<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 354,
            "type": {
              "path": [
                "pangolin_parachain_runtime",
                "Runtime"
              ],
              "params": [

              ],
              "def": {
                "Composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "items": [
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The full account information for a particular account ID."
                ]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Total extrinsics count for the current block."
                ]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "type": {
                  "Plain": 7
                },
                "fallback": "0x000000000000000000000000000000000000000000000000",
                "docs": [
                  " The current weight for the block."
                ]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 9
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Map of block numbers to block hashes."
                ]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 10
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "type": {
                  "Plain": 9
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Hash of the previous block."
                ]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "type": {
                  "Plain": 11
                },
                "fallback": "0x00",
                "docs": [
                  " Digest of the current block, also part of the block header."
                ]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "type": {
                  "Plain": 15
                },
                "fallback": "0x00",
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of events in the `Events<T>` list."
                ]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 9,
                    "value": 111
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(T::BlockNumber, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "type": {
                  "Plain": 113
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "type": {
                  "Plain": 109
                },
                "fallback": "0x00",
                "docs": [
                  " The execution phase of the block."
                ]
              }
            ]
          },
          "calls": {
            "type": 115
          },
          "events": {
            "type": 18
          },
          "constants": [
            {
              "name": "BlockWeights",
              "type": 120,
              "value": "0x00f2052a010000000088526a74000000405973070000000001c0d22c76510000000100e6bd4f57000000010000000000000000405973070000000001c074c1906e000000010088526a740000000100a2941a1d0000004059730700000000000000",
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ]
            },
            {
              "name": "BlockLength",
              "type": 124,
              "value": "0x00003c000000500000005000",
              "docs": [
                " The maximum length of a block (in bytes)."
              ]
            },
            {
              "name": "BlockHashCount",
              "type": 4,
              "value": "0x60090000",
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ]
            },
            {
              "name": "DbWeight",
              "type": 126,
              "value": "0x40787d010000000000e1f50500000000",
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ]
            },
            {
              "name": "Version",
              "type": 127,
              "value": "0x4850616e676f6c696e2050617261636861696e4850616e676f6c696e2050617261636861696e01000000c81400000100000028df6acb689907609b0400000037e397fc7c91f5e40100000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000ab3c0572291feb8b01000000dd718d5cc53262d401000000bc9d89904f5b923f0100000037c8bb1350a9a2a801000000ea93e3f16f3d6962020000000100000000",
              "docs": [
                " Get the chain's current version."
              ]
            },
            {
              "name": "SS58Prefix",
              "type": 87,
              "value": "0x2a00",
              "docs": [
                " The designated SS85 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "errors": {
            "type": 131
          },
          "index": 0
        },
        {
          "name": "ParachainSystem",
          "storage": {
            "prefix": "ParachainSystem",
            "items": [
              {
                "name": "PendingValidationCode",
                "modifier": "Default",
                "type": {
                  "Plain": 10
                },
                "fallback": "0x00",
                "docs": [
                  " In case of a scheduled upgrade, this storage field contains the validation code to be applied.",
                  "",
                  " As soon as the relay chain gives us the go-ahead signal, we will overwrite the [`:code`][well_known_keys::CODE]",
                  " which will result the next block process with the new validation code. This concludes the upgrade process.",
                  "",
                  " [well_known_keys::CODE]: sp_core::storage::well_known_keys::CODE"
                ]
              },
              {
                "name": "NewValidationCode",
                "modifier": "Optional",
                "type": {
                  "Plain": 10
                },
                "fallback": "0x00",
                "docs": [
                  " Validation code that is set by the parachain and is to be communicated to collator and",
                  " consequently the relay-chain.",
                  "",
                  " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                  " the value."
                ]
              },
              {
                "name": "ValidationData",
                "modifier": "Optional",
                "type": {
                  "Plain": 132
                },
                "fallback": "0x00",
                "docs": [
                  " The [`PersistedValidationData`] set for this block.",
                  " This value is expected to be set only once per block and it's never stored",
                  " in the trie."
                ]
              },
              {
                "name": "DidSetValidationCode",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " Were the validation data set to notify the relay chain?"
                ]
              },
              {
                "name": "LastRelayChainBlockNumber",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The relay chain block number associated with the last parachain block."
                ]
              },
              {
                "name": "UpgradeRestrictionSignal",
                "modifier": "Default",
                "type": {
                  "Plain": 134
                },
                "fallback": "0x00",
                "docs": [
                  " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                  " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                  " candidate will be invalid.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "RelayStateProof",
                "modifier": "Optional",
                "type": {
                  "Plain": 136
                },
                "fallback": "0x00",
                "docs": [
                  " The state proof for the last relay parent block.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "RelevantMessagingState",
                "modifier": "Optional",
                "type": {
                  "Plain": 138
                },
                "fallback": "0x00",
                "docs": [
                  " The snapshot of some state related to messaging relevant to the current parachain as per",
                  " the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "HostConfiguration",
                "modifier": "Optional",
                "type": {
                  "Plain": 142
                },
                "fallback": "0x00",
                "docs": [
                  " The parachain host configuration that was obtained from the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "LastDmqMqcHead",
                "modifier": "Default",
                "type": {
                  "Plain": 143
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The last downward message queue chain head we have observed.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "LastHrmpMqcHeads",
                "modifier": "Default",
                "type": {
                  "Plain": 144
                },
                "fallback": "0x00",
                "docs": [
                  " The message queue chain heads we have observed per each channel incoming channel.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "ProcessedDownwardMessages",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of downward messages processed in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpWatermark",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " HRMP watermark that was set in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpOutboundMessages",
                "modifier": "Default",
                "type": {
                  "Plain": 147
                },
                "fallback": "0x00",
                "docs": [
                  " HRMP messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "UpwardMessages",
                "modifier": "Default",
                "type": {
                  "Plain": 119
                },
                "fallback": "0x00",
                "docs": [
                  " Upward messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "PendingUpwardMessages",
                "modifier": "Default",
                "type": {
                  "Plain": 119
                },
                "fallback": "0x00",
                "docs": [
                  " Upward messages that are still pending and not yet send to the relay chain."
                ]
              },
              {
                "name": "AnnouncedHrmpMessagesPerCandidate",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                  " announcing the weight of `on_initialize` and `on_finalize`."
                ]
              },
              {
                "name": "ReservedXcmpWeightOverride",
                "modifier": "Optional",
                "type": {
                  "Plain": 8
                },
                "fallback": "0x00",
                "docs": [
                  " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "ReservedDmpWeightOverride",
                "modifier": "Optional",
                "type": {
                  "Plain": 8
                },
                "fallback": "0x00",
                "docs": [
                  " The weight we reserve at the beginning of the block for processing DMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "AuthorizedUpgrade",
                "modifier": "Optional",
                "type": {
                  "Plain": 9
                },
                "fallback": "0x00",
                "docs": [
                  " The next authorized upgrade, if there is one."
                ]
              },
              {
                "name": "CustomValidationHeadData",
                "modifier": "Optional",
                "type": {
                  "Plain": 10
                },
                "fallback": "0x00",
                "docs": [
                  " A custom head data that should be returned as result of `validate_block`.",
                  "",
                  " See [`Pallet::set_custom_validation_head_data`] for more information."
                ]
              }
            ]
          },
          "calls": {
            "type": 149
          },
          "events": {
            "type": 27
          },
          "constants": [

          ],
          "errors": {
            "type": 158
          },
          "index": 1
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "items": [
              {
                "name": "Now",
                "modifier": "Default",
                "type": {
                  "Plain": 8
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Current time for the current block."
                ]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " Did the timestamp get updated in this block?"
                ]
              }
            ]
          },
          "calls": {
            "type": 159
          },
          "events": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "type": 8,
              "value": "0x7017000000000000",
              "docs": [
                " The minimum period between blocks. Beware that this is different to the *expected*",
                " period that the block production apparatus provides. Your chosen consensus system will",
                " generally work with this to determine a sensible block time. e.g. For Aura, it will be",
                " double this period on default settings."
              ]
            }
          ],
          "errors": null,
          "index": 3
        },
        {
          "name": "ParachainInfo",
          "storage": {
            "prefix": "ParachainInfo",
            "items": [
              {
                "name": "ParachainId",
                "modifier": "Default",
                "type": {
                  "Plain": 37
                },
                "fallback": "0x64000000",
                "docs": [

                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [

          ],
          "errors": null,
          "index": 4
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "items": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "type": {
                  "Plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total units issued in the system."
                ]
              },
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 5
                  }
                },
                "fallback": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 160
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 164
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Named reserves on some account balances."
                ]
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "Plain": 167
                },
                "fallback": "0x00",
                "docs": [
                  " Storage version of the pallet.",
                  "",
                  " This is set to v2.0.0 for new networks."
                ]
              }
            ]
          },
          "calls": {
            "type": 168
          },
          "events": {
            "type": 28
          },
          "constants": [
            {
              "name": "ExistentialDeposit",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " The minimum amount required to keep an account open."
              ]
            },
            {
              "name": "MaxLocks",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation."
              ]
            },
            {
              "name": "MaxReserves",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of named reserves that can exist on an account."
              ]
            }
          ],
          "errors": {
            "type": 171
          },
          "index": 5
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "items": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "type": {
                  "Plain": 93
                },
                "fallback": "0x000064a7b3b6e00d0000000000000000",
                "docs": [

                ]
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "Plain": 172
                },
                "fallback": "0x00",
                "docs": [

                ]
              }
            ]
          },
          "calls": null,
          "events": {
            "type": 30
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "type": 2,
              "value": "0x05",
              "docs": [
                " A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "errors": null,
          "index": 6
        },
        {
          "name": "Authorship",
          "storage": {
            "prefix": "Authorship",
            "items": [
              {
                "name": "Uncles",
                "modifier": "Default",
                "type": {
                  "Plain": 173
                },
                "fallback": "0x00",
                "docs": [
                  " Uncles"
                ]
              },
              {
                "name": "Author",
                "modifier": "Optional",
                "type": {
                  "Plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Author of current block."
                ]
              },
              {
                "name": "DidSetUncles",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " Whether uncles were already set in this block."
                ]
              }
            ]
          },
          "calls": {
            "type": 176
          },
          "events": null,
          "constants": [
            {
              "name": "UncleGenerations",
              "type": 4,
              "value": "0x00000000",
              "docs": [
                " The number of blocks back we should accept uncles.",
                " This means that we will deal with uncle-parents that are",
                " `UncleGenerations + 1` before `now`."
              ]
            }
          ],
          "errors": {
            "type": 180
          },
          "index": 7
        },
        {
          "name": "CollatorSelection",
          "storage": {
            "prefix": "CollatorSelection",
            "items": [
              {
                "name": "Invulnerables",
                "modifier": "Default",
                "type": {
                  "Plain": 181
                },
                "fallback": "0x00",
                "docs": [
                  " The invulnerable, fixed collators."
                ]
              },
              {
                "name": "Candidates",
                "modifier": "Default",
                "type": {
                  "Plain": 182
                },
                "fallback": "0x00",
                "docs": [
                  " The (community, limited) collation candidates."
                ]
              },
              {
                "name": "LastAuthoredBlock",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " Last block authored by collator."
                ]
              },
              {
                "name": "DesiredCandidates",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Desired number of candidates.",
                  "",
                  " This should ideally always be less than [`Config::MaxCandidates`] for weights to be correct."
                ]
              },
              {
                "name": "CandidacyBond",
                "modifier": "Default",
                "type": {
                  "Plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Fixed amount to deposit to become a collator.",
                  "",
                  " When a collator calls `leave_intent` they immediately receive the deposit back."
                ]
              }
            ]
          },
          "calls": {
            "type": 185
          },
          "events": {
            "type": 31
          },
          "constants": [

          ],
          "errors": {
            "type": 186
          },
          "index": 8
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "items": [
              {
                "name": "Validators",
                "modifier": "Default",
                "type": {
                  "Plain": 32
                },
                "fallback": "0x00",
                "docs": [
                  " The current set of validators."
                ]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Current index of the session."
                ]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "type": {
                  "Plain": 187
                },
                "fallback": "0x00",
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "type": {
                  "Plain": 192
                },
                "fallback": "0x00",
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 189
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The next session keys for a validator."
                ]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 193,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                ]
              }
            ]
          },
          "calls": {
            "type": 195
          },
          "events": {
            "type": 33
          },
          "constants": [

          ],
          "errors": {
            "type": 196
          },
          "index": 9
        },
        {
          "name": "Aura",
          "storage": {
            "prefix": "Aura",
            "items": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "Plain": 197
                },
                "fallback": "0x00",
                "docs": [
                  " The current authority set."
                ]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "type": {
                  "Plain": 199
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The current slot of this block.",
                  "",
                  " This will be set in `on_initialize`."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [

          ],
          "errors": null,
          "index": 10
        },
        {
          "name": "AuraExt",
          "storage": {
            "prefix": "AuraExt",
            "items": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "Plain": 197
                },
                "fallback": "0x00",
                "docs": [
                  " Serves as cache for the authorities.",
                  "",
                  " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
                  " but we require the old authorities to verify the seal when validating a PoV. This will always",
                  " be updated to the latest AuRa authorities in `on_finalize`."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [

          ],
          "errors": null,
          "index": 11
        },
        {
          "name": "XcmpQueue",
          "storage": {
            "prefix": "XcmpQueue",
            "items": [
              {
                "name": "InboundXcmpStatus",
                "modifier": "Default",
                "type": {
                  "Plain": 200
                },
                "fallback": "0x00",
                "docs": [
                  " Status of the inbound XCMP channels."
                ]
              },
              {
                "name": "InboundXcmpMessages",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Twox64Concat"
                    ],
                    "key": 206,
                    "value": 10
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Inbound aggregate XCMP messages. It can only be one per ParaId/block."
                ]
              },
              {
                "name": "OutboundXcmpStatus",
                "modifier": "Default",
                "type": {
                  "Plain": 207
                },
                "fallback": "0x00",
                "docs": [
                  " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                  " and last outbound message. If the two indices are equal, then it indicates an empty",
                  " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                  " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                  " case of the need to send a high-priority signal message this block.",
                  " The bool is true if there is a signal message waiting to be sent."
                ]
              },
              {
                "name": "OutboundXcmpMessages",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Twox64Concat"
                    ],
                    "key": 210,
                    "value": 10
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The messages outbound in a given XCMP channel."
                ]
              },
              {
                "name": "SignalMessages",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 37,
                    "value": 10
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Any signal messages waiting to be sent."
                ]
              },
              {
                "name": "QueueConfig",
                "modifier": "Default",
                "type": {
                  "Plain": 211
                },
                "fallback": "0x020000000500000001000000a086010000000000020000000000000000c817a804000000",
                "docs": [
                  " The configuration which controls the dynamics of the outbound queue."
                ]
              },
              {
                "name": "Overweight",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 8,
                    "value": 212
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The messages that exceeded max individual message weight budget.",
                  "",
                  " These message stay in this storage map until they are manually dispatched via",
                  " `service_overweight`."
                ]
              },
              {
                "name": "OverweightCount",
                "modifier": "Default",
                "type": {
                  "Plain": 8
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The number of overweight messages ever recorded in `Overweight`. Also doubles as the next",
                  " available free overweight index."
                ]
              },
              {
                "name": "QueueSuspended",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
                ]
              }
            ]
          },
          "calls": {
            "type": 213
          },
          "events": {
            "type": 34
          },
          "constants": [

          ],
          "errors": {
            "type": 214
          },
          "index": 12
        },
        {
          "name": "PolkadotXcm",
          "storage": {
            "prefix": "PolkadotXcm",
            "items": [
              {
                "name": "QueryCounter",
                "modifier": "Default",
                "type": {
                  "Plain": 8
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The latest available query index."
                ]
              },
              {
                "name": "Queries",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 8,
                    "value": 215
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The ongoing queries."
                ]
              },
              {
                "name": "AssetTraps",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 9,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " The existing asset traps.",
                  "",
                  " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                  " times this pair has been trapped (usually just 1 if it exists at all)."
                ]
              },
              {
                "name": "SafeXcmVersion",
                "modifier": "Optional",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                  " then the destinations whose XCM version is unknown are considered unreachable."
                ]
              },
              {
                "name": "SupportedVersion",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2128Concat"
                    ],
                    "key": 221,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The Latest versions that we know various locations support."
                ]
              },
              {
                "name": "VersionNotifiers",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2128Concat"
                    ],
                    "key": 221,
                    "value": 8
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All locations that we have requested version notifications from."
                ]
              },
              {
                "name": "VersionNotifyTargets",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2128Concat"
                    ],
                    "key": 221,
                    "value": 222
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The target locations that are subscribed to our version changes, as well as the most recent",
                  " of our versions we informed them of."
                ]
              },
              {
                "name": "VersionDiscoveryQueue",
                "modifier": "Default",
                "type": {
                  "Plain": 223
                },
                "fallback": "0x00",
                "docs": [
                  " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                  " the `u32` counter is the number of times that a send to the destination has been attempted,",
                  " which is used as a prioritization."
                ]
              },
              {
                "name": "CurrentMigration",
                "modifier": "Optional",
                "type": {
                  "Plain": 226
                },
                "fallback": "0x00",
                "docs": [
                  " The current migration's stage, if any."
                ]
              }
            ]
          },
          "calls": {
            "type": 228
          },
          "events": {
            "type": 38
          },
          "constants": [

          ],
          "errors": {
            "type": 251
          },
          "index": 13
        },
        {
          "name": "CumulusXcm",
          "storage": null,
          "calls": null,
          "events": {
            "type": 78
          },
          "constants": [

          ],
          "errors": {
            "type": 252
          },
          "index": 14
        },
        {
          "name": "DmpQueue",
          "storage": {
            "prefix": "DmpQueue",
            "items": [
              {
                "name": "Configuration",
                "modifier": "Default",
                "type": {
                  "Plain": 253
                },
                "fallback": "0x00e40b5402000000",
                "docs": [
                  " The configuration."
                ]
              },
              {
                "name": "PageIndex",
                "modifier": "Default",
                "type": {
                  "Plain": 254
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The page index."
                ]
              },
              {
                "name": "Pages",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 4,
                    "value": 255
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The queue pages."
                ]
              },
              {
                "name": "Overweight",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 8,
                    "value": 256
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The overweight messages."
                ]
              }
            ]
          },
          "calls": {
            "type": 257
          },
          "events": {
            "type": 79
          },
          "constants": [

          ],
          "errors": {
            "type": 258
          },
          "index": 15
        },
        {
          "name": "Utility",
          "storage": null,
          "calls": {
            "type": 259
          },
          "events": {
            "type": 80
          },
          "constants": [
            {
              "name": "batched_calls_limit",
              "type": 4,
              "value": "0xaa2a0000",
              "docs": [
                " The limit on the number of batched calls."
              ]
            }
          ],
          "errors": {
            "type": 306
          },
          "index": 16
        },
        {
          "name": "Multisig",
          "storage": {
            "prefix": "Multisig",
            "items": [
              {
                "name": "Multisigs",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2128Concat"
                    ],
                    "key": 307,
                    "value": 308
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The set of open multisig operations."
                ]
              },
              {
                "name": "Calls",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 1,
                    "value": 309
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 262
          },
          "events": {
            "type": 83
          },
          "constants": [
            {
              "name": "DepositBase",
              "type": 6,
              "value": "0x00c061c8e51547000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a multisig execution or to",
                " store a dispatch call for later.",
                "",
                " This is held for an additional storage item whose value size is",
                " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
                " `32 + sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "DepositFactor",
              "type": 6,
              "value": "0x0000dd0ee90200000000000000000000",
              "docs": [
                " The amount of currency needed per unit threshold when creating a multisig execution.",
                "",
                " This is held for adding 32 bytes more into a pre-existing storage value."
              ]
            },
            {
              "name": "MaxSignatories",
              "type": 87,
              "value": "0x6400",
              "docs": [
                " The maximum amount of signatories allowed in the multisig."
              ]
            }
          ],
          "errors": {
            "type": 310
          },
          "index": 17
        },
        {
          "name": "Proxy",
          "storage": {
            "prefix": "Proxy",
            "items": [
              {
                "name": "Proxies",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 311
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " The set of account proxies. Maps the account which has delegated to the accounts",
                  " which are being delegated to, together with the amount held on deposit."
                ]
              },
              {
                "name": "Announcements",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 315
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " The announcements made by the proxy (key)."
                ]
              }
            ]
          },
          "calls": {
            "type": 265
          },
          "events": {
            "type": 85
          },
          "constants": [
            {
              "name": "ProxyDepositBase",
              "type": 6,
              "value": "0x00401632881147000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a proxy.",
                "",
                " This is held for an additional storage item whose value size is",
                " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "ProxyDepositFactor",
              "type": 6,
              "value": "0x00e85357000300000000000000000000",
              "docs": [
                " The amount of currency needed per proxy added.",
                "",
                " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                " into account `32 + proxy_type.encode().len()` bytes of data."
              ]
            },
            {
              "name": "MaxProxies",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of proxies allowed for a single account."
              ]
            },
            {
              "name": "MaxPending",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of time-delayed announcements that are allowed to be pending."
              ]
            },
            {
              "name": "AnnouncementDepositBase",
              "type": 6,
              "value": "0x0080cd75421247000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating an announcement.",
                "",
                " This is held when a new storage item holding a `Balance` is created (typically 16",
                " bytes)."
              ]
            },
            {
              "name": "AnnouncementDepositFactor",
              "type": 6,
              "value": "0x00d0a7ae000600000000000000000000",
              "docs": [
                " The amount of currency needed per announcement made.",
                "",
                " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                " into a pre-existing storage value."
              ]
            }
          ],
          "errors": {
            "type": 319
          },
          "index": 18
        },
        {
          "name": "Sudo",
          "storage": {
            "prefix": "Sudo",
            "items": [
              {
                "name": "Key",
                "modifier": "Optional",
                "type": {
                  "Plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The `AccountId` of the sudo key."
                ]
              }
            ]
          },
          "calls": {
            "type": 267
          },
          "events": {
            "type": 88
          },
          "constants": [

          ],
          "errors": {
            "type": 320
          },
          "index": 19
        },
        {
          "name": "RemoteGovernance",
          "storage": {
            "prefix": "RemoteGovernance",
            "items": [
              {
                "name": "PreviousBridgeFinalized",
                "modifier": "Default",
                "type": {
                  "Plain": 9
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [

                ]
              },
              {
                "name": "Emergency",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 268
          },
          "events": {
            "type": 90
          },
          "constants": [

          ],
          "errors": {
            "type": 321
          },
          "index": 25
        },
        {
          "name": "BridgePangolinGrandpa",
          "storage": {
            "prefix": "BridgePangolinGrandpa",
            "items": [
              {
                "name": "RequestCount",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The current number of requests which have written to storage.",
                  "",
                  " If the `RequestCount` hits `MaxRequests`, no more calls will be allowed to the pallet until",
                  " the request capacity is increased.",
                  "",
                  " The `RequestCount` is decreased by one at the beginning of every block. This is to ensure",
                  " that the pallet can always make progress."
                ]
              },
              {
                "name": "InitialHash",
                "modifier": "Default",
                "type": {
                  "Plain": 9
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Hash of the header used to bootstrap the pallet."
                ]
              },
              {
                "name": "BestFinalized",
                "modifier": "Default",
                "type": {
                  "Plain": 9
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Hash of the best finalized header."
                ]
              },
              {
                "name": "ImportedHashes",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 4,
                    "value": 9
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A ring buffer of imported hashes. Ordered by the insertion time."
                ]
              },
              {
                "name": "ImportedHashesPointer",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Current ring buffer position."
                ]
              },
              {
                "name": "ImportedHeaders",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 9,
                    "value": 178
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Headers which have been imported into the pallet."
                ]
              },
              {
                "name": "CurrentAuthoritySet",
                "modifier": "Default",
                "type": {
                  "Plain": 322
                },
                "fallback": "0x000000000000000000",
                "docs": [
                  " The current GRANDPA Authority set."
                ]
              },
              {
                "name": "PalletOwner",
                "modifier": "Optional",
                "type": {
                  "Plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Optional pallet owner.",
                  "",
                  " Pallet owner has a right to halt all pallet operations and then resume it. If it is",
                  " `None`, then there are no direct ways to halt/resume pallet operations, but other",
                  " runtime methods may still be used to do that (i.e. democracy::referendum to update halt",
                  " flag directly or call the `halt_operations`)."
                ]
              },
              {
                "name": "IsHalted",
                "modifier": "Default",
                "type": {
                  "Plain": 107
                },
                "fallback": "0x00",
                "docs": [
                  " If true, all pallet transactions are failed immediately."
                ]
              }
            ]
          },
          "calls": {
            "type": 269
          },
          "events": null,
          "constants": [
            {
              "name": "MaxRequests",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The upper bound on the number of requests allowed by the pallet.",
                "",
                " A request refers to an action which writes a header to storage.",
                "",
                " Once this bound is reached the pallet will not allow any dispatchables to be called",
                " until the request count has decreased."
              ]
            },
            {
              "name": "HeadersToKeep",
              "type": 4,
              "value": "0xc0890100",
              "docs": [
                " Maximal number of finalized headers to keep in the storage.",
                "",
                " The setting is there to prevent growing the on-chain state indefinitely. Note",
                " the setting does not relate to block numbers - we will simply keep as much items",
                " in the storage, so it doesn't guarantee any fixed timeframe for finality headers."
              ]
            }
          ],
          "errors": {
            "type": 323
          },
          "index": 20
        },
        {
          "name": "BridgePangolinMessages",
          "storage": {
            "prefix": "BridgePangolinMessages",
            "items": [
              {
                "name": "PalletOwner",
                "modifier": "Optional",
                "type": {
                  "Plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Optional pallet owner.",
                  "",
                  " Pallet owner has a right to halt all pallet operations and then resume it. If it is",
                  " `None`, then there are no direct ways to halt/resume pallet operations, but other",
                  " runtime methods may still be used to do that (i.e. democracy::referendum to update halt",
                  " flag directly or call the `halt_operations`)."
                ]
              },
              {
                "name": "PalletOperatingMode",
                "modifier": "Default",
                "type": {
                  "Plain": 284
                },
                "fallback": "0x00",
                "docs": [
                  " The current operating mode of the pallet.",
                  "",
                  " Depending on the mode either all, some, or no transactions will be allowed."
                ]
              },
              {
                "name": "InboundLanes",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 14,
                    "value": 324
                  }
                },
                "fallback": "0x000000000000000000",
                "docs": [
                  " Map of lane id => inbound lane data."
                ]
              },
              {
                "name": "OutboundLanes",
                "modifier": "Default",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 14,
                    "value": 327
                  }
                },
                "fallback": "0x010000000000000000000000000000000000000000000000",
                "docs": [
                  " Map of lane id => outbound lane data."
                ]
              },
              {
                "name": "OutboundMessages",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 328,
                    "value": 329
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All queued outbound messages."
                ]
              }
            ]
          },
          "calls": {
            "type": 283
          },
          "events": {
            "type": 91
          },
          "constants": [
            {
              "name": "BridgedChainId",
              "type": 14,
              "value": "0x7061676c",
              "docs": [
                " Gets the chain id value from the instance."
              ]
            }
          ],
          "errors": {
            "type": 330
          },
          "index": 21
        },
        {
          "name": "BridgePangolinDispatch",
          "storage": null,
          "calls": null,
          "events": {
            "type": 97
          },
          "constants": [

          ],
          "errors": null,
          "index": 22
        },
        {
          "name": "PangolinFeeMarket",
          "storage": {
            "prefix": "PangolinFeeMarket",
            "items": [
              {
                "name": "RelayersMap",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 331
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "Relayers",
                "modifier": "Optional",
                "type": {
                  "Plain": 32
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "AssignedRelayers",
                "modifier": "Optional",
                "type": {
                  "Plain": 332
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "Orders",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 98,
                    "value": 333
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "CollateralSlashProtect",
                "modifier": "Optional",
                "type": {
                  "Plain": 6
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "AssignedRelayersNumber",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x03000000",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 298
          },
          "events": {
            "type": 99
          },
          "constants": [
            {
              "name": "TreasuryPalletId",
              "type": 337,
              "value": "0x64612f7472737279",
              "docs": [
                " Some reward goes to Treasury."
              ]
            },
            {
              "name": "LockId",
              "type": 60,
              "value": "0x64612f6665656c66",
              "docs": [

              ]
            },
            {
              "name": "MinimumRelayFee",
              "type": 6,
              "value": "0x0000dcce86b42ad00000000000000000",
              "docs": [
                " The minimum fee for relaying."
              ]
            },
            {
              "name": "CollateralPerOrder",
              "type": 6,
              "value": "0x000088b116afe3b50200000000000000",
              "docs": [
                " The collateral relayer need to lock for each order."
              ]
            },
            {
              "name": "Slot",
              "type": 4,
              "value": "0x58020000",
              "docs": [
                " The slot times set"
              ]
            },
            {
              "name": "AssignedRelayersRewardRatio",
              "type": 338,
              "value": "0xc0270900",
              "docs": [
                " Reward parameters"
              ]
            },
            {
              "name": "MessageRelayersRewardRatio",
              "type": 338,
              "value": "0x00350c00",
              "docs": [

              ]
            },
            {
              "name": "ConfirmRelayersRewardRatio",
              "type": 338,
              "value": "0x400d0300",
              "docs": [

              ]
            }
          ],
          "errors": {
            "type": 339
          },
          "index": 23
        },
        {
          "name": "FromPangolinIssuing",
          "storage": {
            "prefix": "FromPangolinIssuing",
            "items": [
              {
                "name": "RemoteBackingAccount",
                "modifier": "Optional",
                "type": {
                  "Plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Remote Backing Address, this used to verify the remote caller"
                ]
              },
              {
                "name": "TransactionInfos",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 98,
                    "value": 104
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " `(sender, amount)` the user *sender* lock and remote issuing amount of asset"
                ]
              },
              {
                "name": "SecureLimitedPeriod",
                "modifier": "Default",
                "type": {
                  "Plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Period between security limitation. Zero means there is no period limitation."
                ]
              },
              {
                "name": "SecureLimitedRingAmount",
                "modifier": "Default",
                "type": {
                  "Plain": 340
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 299
          },
          "events": {
            "type": 106
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 337,
              "value": "0x64612f7061616973",
              "docs": [
                " The pallet id of this pallet"
              ]
            },
            {
              "name": "DecimalMultiplier",
              "type": 6,
              "value": "0x00ca9a3b000000000000000000000000",
              "docs": [
                " The local token decimals."
              ]
            }
          ],
          "errors": {
            "type": 341
          },
          "index": 24
        },
        {
          "name": "MessageRouter",
          "storage": {
            "prefix": "MessageRouter",
            "items": [
              {
                "name": "TargetXcmExecConfig",
                "modifier": "Optional",
                "type": {
                  "Map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 40,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the units per second executed by the target chain for local asset(e.g. CRAB).",
                  " This is used to know how to charge for XCM execution in local asset.",
                  " For example:",
                  " key: {parents: 1, Parachain(2023)}, val: 14719736222326895902025",
                  " represents the units per second of CRAB token on moonriver"
                ]
              }
            ]
          },
          "calls": {
            "type": 300
          },
          "events": {
            "type": 108
          },
          "constants": [

          ],
          "errors": {
            "type": 342
          },
          "index": 26
        }
      ],
      "extrinsic": {
        "type": 343,
        "version": 4,
        "signedExtensions": [
          {
            "identifier": "CheckNonZeroSender",
            "type": 345,
            "additionalSigned": 82
          },
          {
            "identifier": "CheckSpecVersion",
            "type": 346,
            "additionalSigned": 4
          },
          {
            "identifier": "CheckTxVersion",
            "type": 347,
            "additionalSigned": 4
          },
          {
            "identifier": "CheckGenesis",
            "type": 348,
            "additionalSigned": 9
          },
          {
            "identifier": "CheckMortality",
            "type": 349,
            "additionalSigned": 9
          },
          {
            "identifier": "CheckNonce",
            "type": 351,
            "additionalSigned": 82
          },
          {
            "identifier": "CheckWeight",
            "type": 352,
            "additionalSigned": 82
          },
          {
            "identifier": "ChargeTransactionPayment",
            "type": 353,
            "additionalSigned": 82
          }
        ]
      },
      "type": 354
    }
  }
}
