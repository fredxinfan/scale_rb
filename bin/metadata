#!/usr/bin/env ruby

require 'bundler/setup'
require 'scale_rb_2'

require 'uri'
require 'net/http'
require 'json'
require 'optparse'

def json_rpc_call(method, params, url)
  uri = URI(url)
  req = Net::HTTP::Post.new(uri, 'Content-Type' => 'application/json')
  req.body = { 'id' => 1, 'jsonrpc' => '2.0', 'method' => method,
               'params' => params }.to_json
  http = Net::HTTP.new(uri.host, uri.port)
  http.use_ssl = true if uri.instance_of? URI::HTTPS
  res = http.request(req)
  # puts res unless res.is_a?(Net::HTTPSuccess)

  result = JSON.parse(res.body)
  raise result['error'] if result['error']

  result['result']
end

def print_metadata(url, block_hash = nil)
  result = json_rpc_call('state_getMetadata', [block_hash], url)

  metadata_hex = result.strip
  metadata = ScaleRb2.decode_metadata(metadata_hex.to_bytes)
  puts JSON.pretty_generate(metadata)
end

def get_block(url, hash=nil)
  result = json_rpc_call('chain_getBlock', [hash], url)
end

# metadata http://g2.dev.darwinia.network:2234 -b 0x23ebddd6519aaf1b7fc916c3709af13d7a4010943fb53038406581171000a58e
# metadata https://pangoro-rpc.darwinia.network
#
@options = {}
parser = OptionParser.new do |opts|
  opts.banner = 'Usage: metadata [url] [options]'
  opts.on('-bHASH', '--block=HASH', 'Block hash') do |value|
    @options[:block] = value
  end
end

if ARGV.empty?
  puts parser
else
  parser.parse!
  url = ARGV[0]
  print_metadata url, @options[:block]
end
